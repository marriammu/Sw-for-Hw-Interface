
Task 3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004e4  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000678  08000680  00010680  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000678  08000678  00010680  2**0
                  CONTENTS
  4 .ARM          00000000  08000678  08000678  00010680  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000678  08000680  00010680  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000678  08000678  00010678  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800067c  0800067c  0001067c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010680  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000680  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000680  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010680  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000c36  00000000  00000000  000106b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000362  00000000  00000000  000112e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000098  00000000  00000000  00011648  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000060  00000000  00000000  000116e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000de8b  00000000  00000000  00011740  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000106d  00000000  00000000  0001f5cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fc8c  00000000  00000000  00020638  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000702c4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000114  00000000  00000000  00070318  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000660 	.word	0x08000660

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000660 	.word	0x08000660

080001d4 <main>:
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"

int main(void) {
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b084      	sub	sp, #16
 80001d8:	af00      	add	r7, sp, #0

		GPIO_Init('B', 5, OUTPUT, PUSH_PULL);
 80001da:	2300      	movs	r3, #0
 80001dc:	2201      	movs	r2, #1
 80001de:	2105      	movs	r1, #5
 80001e0:	2042      	movs	r0, #66	; 0x42
 80001e2:	f000 f889 	bl	80002f8 <GPIO_Init>
		GPIO_Init('B', 6, OUTPUT, PUSH_PULL);
 80001e6:	2300      	movs	r3, #0
 80001e8:	2201      	movs	r2, #1
 80001ea:	2106      	movs	r1, #6
 80001ec:	2042      	movs	r0, #66	; 0x42
 80001ee:	f000 f883 	bl	80002f8 <GPIO_Init>
		GPIO_Init('B', 7, OUTPUT, PUSH_PULL);
 80001f2:	2300      	movs	r3, #0
 80001f4:	2201      	movs	r2, #1
 80001f6:	2107      	movs	r1, #7
 80001f8:	2042      	movs	r0, #66	; 0x42
 80001fa:	f000 f87d 	bl	80002f8 <GPIO_Init>
		GPIO_Init('B', 3, INPUT, PULL_UP);
 80001fe:	2301      	movs	r3, #1
 8000200:	2200      	movs	r2, #0
 8000202:	2103      	movs	r1, #3
 8000204:	2042      	movs	r0, #66	; 0x42
 8000206:	f000 f877 	bl	80002f8 <GPIO_Init>
//		GPIOB_MODER &= ~((0x03)<<(2*3));
//		GPIOB_PUPDR |= ((0x01)<<(2*3));
		 char i = 0;
 800020a:	2300      	movs	r3, #0
 800020c:	73fb      	strb	r3, [r7, #15]
		 char ButtonSatus1;
		 char ButtonSatus2;
  while (1) {
      ButtonSatus1=GPIOB_IDR>>3 & 1 ;
 800020e:	4b1a      	ldr	r3, [pc, #104]	; (8000278 <main+0xa4>)
 8000210:	691b      	ldr	r3, [r3, #16]
 8000212:	08db      	lsrs	r3, r3, #3
 8000214:	b2db      	uxtb	r3, r3
 8000216:	f003 0301 	and.w	r3, r3, #1
 800021a:	71fb      	strb	r3, [r7, #7]
      if (  ButtonSatus1==1 ){
 800021c:	79fb      	ldrb	r3, [r7, #7]
 800021e:	2b01      	cmp	r3, #1
 8000220:	d1f5      	bne.n	800020e <main+0x3a>
    	    for (int n=0;n<2000;n++)
 8000222:	2300      	movs	r3, #0
 8000224:	60bb      	str	r3, [r7, #8]
 8000226:	e002      	b.n	800022e <main+0x5a>
 8000228:	68bb      	ldr	r3, [r7, #8]
 800022a:	3301      	adds	r3, #1
 800022c:	60bb      	str	r3, [r7, #8]
 800022e:	68bb      	ldr	r3, [r7, #8]
 8000230:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8000234:	dbf8      	blt.n	8000228 <main+0x54>
    	    {}

    	    ButtonSatus2=GPIOB_IDR>>3 & 1;
 8000236:	4b10      	ldr	r3, [pc, #64]	; (8000278 <main+0xa4>)
 8000238:	691b      	ldr	r3, [r3, #16]
 800023a:	08db      	lsrs	r3, r3, #3
 800023c:	b2db      	uxtb	r3, r3
 800023e:	f003 0301 	and.w	r3, r3, #1
 8000242:	71bb      	strb	r3, [r7, #6]
    	      if ( ButtonSatus2==0){
 8000244:	79bb      	ldrb	r3, [r7, #6]
 8000246:	2b00      	cmp	r3, #0
 8000248:	d1e1      	bne.n	800020e <main+0x3a>
    	    	  GPIO_WritePin('B', 5,i%7);
 800024a:	7bfa      	ldrb	r2, [r7, #15]
 800024c:	4b0b      	ldr	r3, [pc, #44]	; (800027c <main+0xa8>)
 800024e:	fba3 1302 	umull	r1, r3, r3, r2
 8000252:	1ad1      	subs	r1, r2, r3
 8000254:	0849      	lsrs	r1, r1, #1
 8000256:	440b      	add	r3, r1
 8000258:	0899      	lsrs	r1, r3, #2
 800025a:	460b      	mov	r3, r1
 800025c:	00db      	lsls	r3, r3, #3
 800025e:	1a5b      	subs	r3, r3, r1
 8000260:	1ad3      	subs	r3, r2, r3
 8000262:	b2db      	uxtb	r3, r3
 8000264:	461a      	mov	r2, r3
 8000266:	2105      	movs	r1, #5
 8000268:	2042      	movs	r0, #66	; 0x42
 800026a:	f000 f965 	bl	8000538 <GPIO_WritePin>
//    	    	  GPIOB_ODR  &=~(7<<5);
//    	    		GPIOB_ODR  |=(i%8<<5);
                      i++;
 800026e:	7bfb      	ldrb	r3, [r7, #15]
 8000270:	3301      	adds	r3, #1
 8000272:	73fb      	strb	r3, [r7, #15]
      ButtonSatus1=GPIOB_IDR>>3 & 1 ;
 8000274:	e7cb      	b.n	800020e <main+0x3a>
 8000276:	bf00      	nop
 8000278:	40020400 	.word	0x40020400
 800027c:	24924925 	.word	0x24924925

08000280 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000284:	4b06      	ldr	r3, [pc, #24]	; (80002a0 <SystemInit+0x20>)
 8000286:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800028a:	4a05      	ldr	r2, [pc, #20]	; (80002a0 <SystemInit+0x20>)
 800028c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000290:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000294:	bf00      	nop
 8000296:	46bd      	mov	sp, r7
 8000298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop
 80002a0:	e000ed00 	.word	0xe000ed00

080002a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80002a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80002dc <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80002a8:	480d      	ldr	r0, [pc, #52]	; (80002e0 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80002aa:	490e      	ldr	r1, [pc, #56]	; (80002e4 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80002ac:	4a0e      	ldr	r2, [pc, #56]	; (80002e8 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b0:	e002      	b.n	80002b8 <LoopCopyDataInit>

080002b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b6:	3304      	adds	r3, #4

080002b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002bc:	d3f9      	bcc.n	80002b2 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002be:	4a0b      	ldr	r2, [pc, #44]	; (80002ec <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80002c0:	4c0b      	ldr	r4, [pc, #44]	; (80002f0 <LoopFillZerobss+0x26>)
  movs r3, #0
 80002c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c4:	e001      	b.n	80002ca <LoopFillZerobss>

080002c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c8:	3204      	adds	r2, #4

080002ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002cc:	d3fb      	bcc.n	80002c6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80002ce:	f7ff ffd7 	bl	8000280 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80002d2:	f000 f9a1 	bl	8000618 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80002d6:	f7ff ff7d 	bl	80001d4 <main>
  bx  lr    
 80002da:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80002dc:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80002e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e8:	08000680 	.word	0x08000680
  ldr r2, =_sbss
 80002ec:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f0:	2000001c 	.word	0x2000001c

080002f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80002f4:	e7fe      	b.n	80002f4 <ADC_IRQHandler>
	...

080002f8 <GPIO_Init>:
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"

void GPIO_Init( char Port, unsigned int PIN_NO, unsigned int PIN_Dir, unsigned int Default_State)
{
 80002f8:	b480      	push	{r7}
 80002fa:	b085      	sub	sp, #20
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	60b9      	str	r1, [r7, #8]
 8000300:	607a      	str	r2, [r7, #4]
 8000302:	603b      	str	r3, [r7, #0]
 8000304:	4603      	mov	r3, r0
 8000306:	73fb      	strb	r3, [r7, #15]
	//enable clock of port
	switch (Port)
 8000308:	7bfb      	ldrb	r3, [r7, #15]
 800030a:	2b41      	cmp	r3, #65	; 0x41
 800030c:	d003      	beq.n	8000316 <GPIO_Init+0x1e>
 800030e:	2b42      	cmp	r3, #66	; 0x42
 8000310:	f000 8083 	beq.w	800041a <GPIO_Init+0x122>
					break;
				}//end switch
		break;
	}

}
 8000314:	e103      	b.n	800051e <GPIO_Init+0x226>
				RCC_AHB1ENR |= (0x01 <<0);
 8000316:	4b85      	ldr	r3, [pc, #532]	; (800052c <GPIO_Init+0x234>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031a:	4a84      	ldr	r2, [pc, #528]	; (800052c <GPIO_Init+0x234>)
 800031c:	f043 0301 	orr.w	r3, r3, #1
 8000320:	6313      	str	r3, [r2, #48]	; 0x30
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	2b03      	cmp	r3, #3
 8000326:	d859      	bhi.n	80003dc <GPIO_Init+0xe4>
 8000328:	a201      	add	r2, pc, #4	; (adr r2, 8000330 <GPIO_Init+0x38>)
 800032a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800032e:	bf00      	nop
 8000330:	08000341 	.word	0x08000341
 8000334:	08000395 	.word	0x08000395
 8000338:	080003ad 	.word	0x080003ad
 800033c:	080003c5 	.word	0x080003c5
							GPIOA_MODER &= ~(0x03 << 2*PIN_NO);
 8000340:	4b7b      	ldr	r3, [pc, #492]	; (8000530 <GPIO_Init+0x238>)
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	68ba      	ldr	r2, [r7, #8]
 8000346:	0052      	lsls	r2, r2, #1
 8000348:	2103      	movs	r1, #3
 800034a:	fa01 f202 	lsl.w	r2, r1, r2
 800034e:	43d2      	mvns	r2, r2
 8000350:	4611      	mov	r1, r2
 8000352:	4a77      	ldr	r2, [pc, #476]	; (8000530 <GPIO_Init+0x238>)
 8000354:	400b      	ands	r3, r1
 8000356:	6013      	str	r3, [r2, #0]
 8000358:	683b      	ldr	r3, [r7, #0]
 800035a:	2b01      	cmp	r3, #1
 800035c:	d003      	beq.n	8000366 <GPIO_Init+0x6e>
 800035e:	683b      	ldr	r3, [r7, #0]
 8000360:	2b10      	cmp	r3, #16
 8000362:	d00b      	beq.n	800037c <GPIO_Init+0x84>
					break;
 8000364:	e03a      	b.n	80003dc <GPIO_Init+0xe4>
							GPIOA_PUPDR |= (0x01<<PIN_NO);
 8000366:	4b72      	ldr	r3, [pc, #456]	; (8000530 <GPIO_Init+0x238>)
 8000368:	68db      	ldr	r3, [r3, #12]
 800036a:	2101      	movs	r1, #1
 800036c:	68ba      	ldr	r2, [r7, #8]
 800036e:	fa01 f202 	lsl.w	r2, r1, r2
 8000372:	4611      	mov	r1, r2
 8000374:	4a6e      	ldr	r2, [pc, #440]	; (8000530 <GPIO_Init+0x238>)
 8000376:	430b      	orrs	r3, r1
 8000378:	60d3      	str	r3, [r2, #12]
					break;
 800037a:	e00a      	b.n	8000392 <GPIO_Init+0x9a>
					        GPIOA_PUPDR |= (0x10<<PIN_NO);
 800037c:	4b6c      	ldr	r3, [pc, #432]	; (8000530 <GPIO_Init+0x238>)
 800037e:	68db      	ldr	r3, [r3, #12]
 8000380:	2110      	movs	r1, #16
 8000382:	68ba      	ldr	r2, [r7, #8]
 8000384:	fa01 f202 	lsl.w	r2, r1, r2
 8000388:	4611      	mov	r1, r2
 800038a:	4a69      	ldr	r2, [pc, #420]	; (8000530 <GPIO_Init+0x238>)
 800038c:	430b      	orrs	r3, r1
 800038e:	60d3      	str	r3, [r2, #12]
					break;
 8000390:	bf00      	nop
					break;
 8000392:	e023      	b.n	80003dc <GPIO_Init+0xe4>
							GPIOA_MODER |= (0x01 << 2*PIN_NO);
 8000394:	4b66      	ldr	r3, [pc, #408]	; (8000530 <GPIO_Init+0x238>)
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	68ba      	ldr	r2, [r7, #8]
 800039a:	0052      	lsls	r2, r2, #1
 800039c:	2101      	movs	r1, #1
 800039e:	fa01 f202 	lsl.w	r2, r1, r2
 80003a2:	4611      	mov	r1, r2
 80003a4:	4a62      	ldr	r2, [pc, #392]	; (8000530 <GPIO_Init+0x238>)
 80003a6:	430b      	orrs	r3, r1
 80003a8:	6013      	str	r3, [r2, #0]
					break;
 80003aa:	e017      	b.n	80003dc <GPIO_Init+0xe4>
							GPIOA_MODER |= (0x02 << 2*PIN_NO);
 80003ac:	4b60      	ldr	r3, [pc, #384]	; (8000530 <GPIO_Init+0x238>)
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	68ba      	ldr	r2, [r7, #8]
 80003b2:	0052      	lsls	r2, r2, #1
 80003b4:	2102      	movs	r1, #2
 80003b6:	fa01 f202 	lsl.w	r2, r1, r2
 80003ba:	4611      	mov	r1, r2
 80003bc:	4a5c      	ldr	r2, [pc, #368]	; (8000530 <GPIO_Init+0x238>)
 80003be:	430b      	orrs	r3, r1
 80003c0:	6013      	str	r3, [r2, #0]
					break;
 80003c2:	e00b      	b.n	80003dc <GPIO_Init+0xe4>
							GPIOA_MODER |= (0x03 << 2*PIN_NO);
 80003c4:	4b5a      	ldr	r3, [pc, #360]	; (8000530 <GPIO_Init+0x238>)
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	68ba      	ldr	r2, [r7, #8]
 80003ca:	0052      	lsls	r2, r2, #1
 80003cc:	2103      	movs	r1, #3
 80003ce:	fa01 f202 	lsl.w	r2, r1, r2
 80003d2:	4611      	mov	r1, r2
 80003d4:	4a56      	ldr	r2, [pc, #344]	; (8000530 <GPIO_Init+0x238>)
 80003d6:	430b      	orrs	r3, r1
 80003d8:	6013      	str	r3, [r2, #0]
					break;
 80003da:	bf00      	nop
 80003dc:	683b      	ldr	r3, [r7, #0]
 80003de:	2b00      	cmp	r3, #0
 80003e0:	d003      	beq.n	80003ea <GPIO_Init+0xf2>
 80003e2:	683b      	ldr	r3, [r7, #0]
 80003e4:	2b01      	cmp	r3, #1
 80003e6:	d00c      	beq.n	8000402 <GPIO_Init+0x10a>
		break;
 80003e8:	e099      	b.n	800051e <GPIO_Init+0x226>
							GPIOA_OTYPER &= ~(0x01<<PIN_NO);
 80003ea:	4b51      	ldr	r3, [pc, #324]	; (8000530 <GPIO_Init+0x238>)
 80003ec:	685b      	ldr	r3, [r3, #4]
 80003ee:	2101      	movs	r1, #1
 80003f0:	68ba      	ldr	r2, [r7, #8]
 80003f2:	fa01 f202 	lsl.w	r2, r1, r2
 80003f6:	43d2      	mvns	r2, r2
 80003f8:	4611      	mov	r1, r2
 80003fa:	4a4d      	ldr	r2, [pc, #308]	; (8000530 <GPIO_Init+0x238>)
 80003fc:	400b      	ands	r3, r1
 80003fe:	6053      	str	r3, [r2, #4]
					break;
 8000400:	e00a      	b.n	8000418 <GPIO_Init+0x120>
							GPIOA_OTYPER |= (0x01<<PIN_NO);
 8000402:	4b4b      	ldr	r3, [pc, #300]	; (8000530 <GPIO_Init+0x238>)
 8000404:	685b      	ldr	r3, [r3, #4]
 8000406:	2101      	movs	r1, #1
 8000408:	68ba      	ldr	r2, [r7, #8]
 800040a:	fa01 f202 	lsl.w	r2, r1, r2
 800040e:	4611      	mov	r1, r2
 8000410:	4a47      	ldr	r2, [pc, #284]	; (8000530 <GPIO_Init+0x238>)
 8000412:	430b      	orrs	r3, r1
 8000414:	6053      	str	r3, [r2, #4]
					break;
 8000416:	bf00      	nop
		break;
 8000418:	e081      	b.n	800051e <GPIO_Init+0x226>
				RCC_AHB1ENR |= (0x01 <<1);
 800041a:	4b44      	ldr	r3, [pc, #272]	; (800052c <GPIO_Init+0x234>)
 800041c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041e:	4a43      	ldr	r2, [pc, #268]	; (800052c <GPIO_Init+0x234>)
 8000420:	f043 0302 	orr.w	r3, r3, #2
 8000424:	6313      	str	r3, [r2, #48]	; 0x30
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	2b03      	cmp	r3, #3
 800042a:	d859      	bhi.n	80004e0 <GPIO_Init+0x1e8>
 800042c:	a201      	add	r2, pc, #4	; (adr r2, 8000434 <GPIO_Init+0x13c>)
 800042e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000432:	bf00      	nop
 8000434:	08000445 	.word	0x08000445
 8000438:	08000499 	.word	0x08000499
 800043c:	080004b1 	.word	0x080004b1
 8000440:	080004c9 	.word	0x080004c9
							GPIOB_MODER &= ~(0x03 << 2*PIN_NO);
 8000444:	4b3b      	ldr	r3, [pc, #236]	; (8000534 <GPIO_Init+0x23c>)
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	68ba      	ldr	r2, [r7, #8]
 800044a:	0052      	lsls	r2, r2, #1
 800044c:	2103      	movs	r1, #3
 800044e:	fa01 f202 	lsl.w	r2, r1, r2
 8000452:	43d2      	mvns	r2, r2
 8000454:	4611      	mov	r1, r2
 8000456:	4a37      	ldr	r2, [pc, #220]	; (8000534 <GPIO_Init+0x23c>)
 8000458:	400b      	ands	r3, r1
 800045a:	6013      	str	r3, [r2, #0]
 800045c:	683b      	ldr	r3, [r7, #0]
 800045e:	2b01      	cmp	r3, #1
 8000460:	d003      	beq.n	800046a <GPIO_Init+0x172>
 8000462:	683b      	ldr	r3, [r7, #0]
 8000464:	2b10      	cmp	r3, #16
 8000466:	d00b      	beq.n	8000480 <GPIO_Init+0x188>
					break;
 8000468:	e03a      	b.n	80004e0 <GPIO_Init+0x1e8>
					     GPIOB_PUPDR |= (0x01<<PIN_NO);
 800046a:	4b32      	ldr	r3, [pc, #200]	; (8000534 <GPIO_Init+0x23c>)
 800046c:	68db      	ldr	r3, [r3, #12]
 800046e:	2101      	movs	r1, #1
 8000470:	68ba      	ldr	r2, [r7, #8]
 8000472:	fa01 f202 	lsl.w	r2, r1, r2
 8000476:	4611      	mov	r1, r2
 8000478:	4a2e      	ldr	r2, [pc, #184]	; (8000534 <GPIO_Init+0x23c>)
 800047a:	430b      	orrs	r3, r1
 800047c:	60d3      	str	r3, [r2, #12]
					break;
 800047e:	e00a      	b.n	8000496 <GPIO_Init+0x19e>
						 GPIOB_PUPDR |= (0x10<<PIN_NO);
 8000480:	4b2c      	ldr	r3, [pc, #176]	; (8000534 <GPIO_Init+0x23c>)
 8000482:	68db      	ldr	r3, [r3, #12]
 8000484:	2110      	movs	r1, #16
 8000486:	68ba      	ldr	r2, [r7, #8]
 8000488:	fa01 f202 	lsl.w	r2, r1, r2
 800048c:	4611      	mov	r1, r2
 800048e:	4a29      	ldr	r2, [pc, #164]	; (8000534 <GPIO_Init+0x23c>)
 8000490:	430b      	orrs	r3, r1
 8000492:	60d3      	str	r3, [r2, #12]
					break;
 8000494:	bf00      	nop
					break;
 8000496:	e023      	b.n	80004e0 <GPIO_Init+0x1e8>
							GPIOB_MODER |= (0x01 << 2*PIN_NO);
 8000498:	4b26      	ldr	r3, [pc, #152]	; (8000534 <GPIO_Init+0x23c>)
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	68ba      	ldr	r2, [r7, #8]
 800049e:	0052      	lsls	r2, r2, #1
 80004a0:	2101      	movs	r1, #1
 80004a2:	fa01 f202 	lsl.w	r2, r1, r2
 80004a6:	4611      	mov	r1, r2
 80004a8:	4a22      	ldr	r2, [pc, #136]	; (8000534 <GPIO_Init+0x23c>)
 80004aa:	430b      	orrs	r3, r1
 80004ac:	6013      	str	r3, [r2, #0]
					break;
 80004ae:	e017      	b.n	80004e0 <GPIO_Init+0x1e8>
							GPIOB_MODER |= (0x02 << 2*PIN_NO);
 80004b0:	4b20      	ldr	r3, [pc, #128]	; (8000534 <GPIO_Init+0x23c>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	68ba      	ldr	r2, [r7, #8]
 80004b6:	0052      	lsls	r2, r2, #1
 80004b8:	2102      	movs	r1, #2
 80004ba:	fa01 f202 	lsl.w	r2, r1, r2
 80004be:	4611      	mov	r1, r2
 80004c0:	4a1c      	ldr	r2, [pc, #112]	; (8000534 <GPIO_Init+0x23c>)
 80004c2:	430b      	orrs	r3, r1
 80004c4:	6013      	str	r3, [r2, #0]
					break;
 80004c6:	e00b      	b.n	80004e0 <GPIO_Init+0x1e8>
							GPIOB_MODER |= (0x03 << 2*PIN_NO);
 80004c8:	4b1a      	ldr	r3, [pc, #104]	; (8000534 <GPIO_Init+0x23c>)
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	68ba      	ldr	r2, [r7, #8]
 80004ce:	0052      	lsls	r2, r2, #1
 80004d0:	2103      	movs	r1, #3
 80004d2:	fa01 f202 	lsl.w	r2, r1, r2
 80004d6:	4611      	mov	r1, r2
 80004d8:	4a16      	ldr	r2, [pc, #88]	; (8000534 <GPIO_Init+0x23c>)
 80004da:	430b      	orrs	r3, r1
 80004dc:	6013      	str	r3, [r2, #0]
					break;
 80004de:	bf00      	nop
 80004e0:	683b      	ldr	r3, [r7, #0]
 80004e2:	2b00      	cmp	r3, #0
 80004e4:	d003      	beq.n	80004ee <GPIO_Init+0x1f6>
 80004e6:	683b      	ldr	r3, [r7, #0]
 80004e8:	2b01      	cmp	r3, #1
 80004ea:	d00c      	beq.n	8000506 <GPIO_Init+0x20e>
		break;
 80004ec:	e016      	b.n	800051c <GPIO_Init+0x224>
							GPIOB_OTYPER &= ~(0x01<<PIN_NO);
 80004ee:	4b11      	ldr	r3, [pc, #68]	; (8000534 <GPIO_Init+0x23c>)
 80004f0:	685b      	ldr	r3, [r3, #4]
 80004f2:	2101      	movs	r1, #1
 80004f4:	68ba      	ldr	r2, [r7, #8]
 80004f6:	fa01 f202 	lsl.w	r2, r1, r2
 80004fa:	43d2      	mvns	r2, r2
 80004fc:	4611      	mov	r1, r2
 80004fe:	4a0d      	ldr	r2, [pc, #52]	; (8000534 <GPIO_Init+0x23c>)
 8000500:	400b      	ands	r3, r1
 8000502:	6053      	str	r3, [r2, #4]
					break;
 8000504:	e00a      	b.n	800051c <GPIO_Init+0x224>
							GPIOB_OTYPER |= (0x01<<PIN_NO);
 8000506:	4b0b      	ldr	r3, [pc, #44]	; (8000534 <GPIO_Init+0x23c>)
 8000508:	685b      	ldr	r3, [r3, #4]
 800050a:	2101      	movs	r1, #1
 800050c:	68ba      	ldr	r2, [r7, #8]
 800050e:	fa01 f202 	lsl.w	r2, r1, r2
 8000512:	4611      	mov	r1, r2
 8000514:	4a07      	ldr	r2, [pc, #28]	; (8000534 <GPIO_Init+0x23c>)
 8000516:	430b      	orrs	r3, r1
 8000518:	6053      	str	r3, [r2, #4]
					break;
 800051a:	bf00      	nop
		break;
 800051c:	bf00      	nop
}
 800051e:	bf00      	nop
 8000520:	3714      	adds	r7, #20
 8000522:	46bd      	mov	sp, r7
 8000524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000528:	4770      	bx	lr
 800052a:	bf00      	nop
 800052c:	40023800 	.word	0x40023800
 8000530:	40020000 	.word	0x40020000
 8000534:	40020400 	.word	0x40020400

08000538 <GPIO_WritePin>:

unsigned char GPIO_WritePin(char Port, unsigned int PIN_NO, unsigned int Data)
{
 8000538:	b480      	push	{r7}
 800053a:	b087      	sub	sp, #28
 800053c:	af00      	add	r7, sp, #0
 800053e:	4603      	mov	r3, r0
 8000540:	60b9      	str	r1, [r7, #8]
 8000542:	607a      	str	r2, [r7, #4]
 8000544:	73fb      	strb	r3, [r7, #15]
	unsigned char result;
	switch(Port)
 8000546:	7bfb      	ldrb	r3, [r7, #15]
 8000548:	2b41      	cmp	r3, #65	; 0x41
 800054a:	d002      	beq.n	8000552 <GPIO_WritePin+0x1a>
 800054c:	2b42      	cmp	r3, #66	; 0x42
 800054e:	d02c      	beq.n	80005aa <GPIO_WritePin+0x72>
 8000550:	e057      	b.n	8000602 <GPIO_WritePin+0xca>
	{
		case('A'):

			if((GPIOA_MODER & (0x03 << 2*PIN_NO)>> (2*PIN_NO))==1)
 8000552:	4b2f      	ldr	r3, [pc, #188]	; (8000610 <GPIO_WritePin+0xd8>)
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	68ba      	ldr	r2, [r7, #8]
 8000558:	0052      	lsls	r2, r2, #1
 800055a:	2103      	movs	r1, #3
 800055c:	4091      	lsls	r1, r2
 800055e:	68ba      	ldr	r2, [r7, #8]
 8000560:	0052      	lsls	r2, r2, #1
 8000562:	fa41 f202 	asr.w	r2, r1, r2
 8000566:	4013      	ands	r3, r2
 8000568:	2b01      	cmp	r3, #1
 800056a:	d11b      	bne.n	80005a4 <GPIO_WritePin+0x6c>
			{
			     if(Data)
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	2b00      	cmp	r3, #0
 8000570:	d00a      	beq.n	8000588 <GPIO_WritePin+0x50>
			     {
			    	 GPIOA_ODR |= (1<<PIN_NO);
 8000572:	4b27      	ldr	r3, [pc, #156]	; (8000610 <GPIO_WritePin+0xd8>)
 8000574:	695b      	ldr	r3, [r3, #20]
 8000576:	2101      	movs	r1, #1
 8000578:	68ba      	ldr	r2, [r7, #8]
 800057a:	fa01 f202 	lsl.w	r2, r1, r2
 800057e:	4611      	mov	r1, r2
 8000580:	4a23      	ldr	r2, [pc, #140]	; (8000610 <GPIO_WritePin+0xd8>)
 8000582:	430b      	orrs	r3, r1
 8000584:	6153      	str	r3, [r2, #20]
 8000586:	e00a      	b.n	800059e <GPIO_WritePin+0x66>
			     }
			     else
			     {
			    	 GPIOA_ODR &= ~(1<<PIN_NO);
 8000588:	4b21      	ldr	r3, [pc, #132]	; (8000610 <GPIO_WritePin+0xd8>)
 800058a:	695b      	ldr	r3, [r3, #20]
 800058c:	2101      	movs	r1, #1
 800058e:	68ba      	ldr	r2, [r7, #8]
 8000590:	fa01 f202 	lsl.w	r2, r1, r2
 8000594:	43d2      	mvns	r2, r2
 8000596:	4611      	mov	r1, r2
 8000598:	4a1d      	ldr	r2, [pc, #116]	; (8000610 <GPIO_WritePin+0xd8>)
 800059a:	400b      	ands	r3, r1
 800059c:	6153      	str	r3, [r2, #20]
			     }
				result = OK;
 800059e:	2300      	movs	r3, #0
 80005a0:	75fb      	strb	r3, [r7, #23]
			}
			else
			{
				result = NOK;
			}
		break;
 80005a2:	e02e      	b.n	8000602 <GPIO_WritePin+0xca>
				result = NOK;
 80005a4:	2301      	movs	r3, #1
 80005a6:	75fb      	strb	r3, [r7, #23]
		break;
 80005a8:	e02b      	b.n	8000602 <GPIO_WritePin+0xca>
		case('B'):
				if((GPIOB_MODER & (0x01 << 2*PIN_NO)>> (2*PIN_NO))==1)
 80005aa:	4b1a      	ldr	r3, [pc, #104]	; (8000614 <GPIO_WritePin+0xdc>)
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	68ba      	ldr	r2, [r7, #8]
 80005b0:	0052      	lsls	r2, r2, #1
 80005b2:	2101      	movs	r1, #1
 80005b4:	4091      	lsls	r1, r2
 80005b6:	68ba      	ldr	r2, [r7, #8]
 80005b8:	0052      	lsls	r2, r2, #1
 80005ba:	fa41 f202 	asr.w	r2, r1, r2
 80005be:	4013      	ands	r3, r2
 80005c0:	2b01      	cmp	r3, #1
 80005c2:	d11b      	bne.n	80005fc <GPIO_WritePin+0xc4>
				{
					 if(Data)
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	2b00      	cmp	r3, #0
 80005c8:	d00a      	beq.n	80005e0 <GPIO_WritePin+0xa8>
					 {
						 GPIOB_ODR |= (1<<PIN_NO);
 80005ca:	4b12      	ldr	r3, [pc, #72]	; (8000614 <GPIO_WritePin+0xdc>)
 80005cc:	695b      	ldr	r3, [r3, #20]
 80005ce:	2101      	movs	r1, #1
 80005d0:	68ba      	ldr	r2, [r7, #8]
 80005d2:	fa01 f202 	lsl.w	r2, r1, r2
 80005d6:	4611      	mov	r1, r2
 80005d8:	4a0e      	ldr	r2, [pc, #56]	; (8000614 <GPIO_WritePin+0xdc>)
 80005da:	430b      	orrs	r3, r1
 80005dc:	6153      	str	r3, [r2, #20]
 80005de:	e00a      	b.n	80005f6 <GPIO_WritePin+0xbe>
					 }
					 else
					 {
						 GPIOB_ODR &= ~(1<<PIN_NO);
 80005e0:	4b0c      	ldr	r3, [pc, #48]	; (8000614 <GPIO_WritePin+0xdc>)
 80005e2:	695b      	ldr	r3, [r3, #20]
 80005e4:	2101      	movs	r1, #1
 80005e6:	68ba      	ldr	r2, [r7, #8]
 80005e8:	fa01 f202 	lsl.w	r2, r1, r2
 80005ec:	43d2      	mvns	r2, r2
 80005ee:	4611      	mov	r1, r2
 80005f0:	4a08      	ldr	r2, [pc, #32]	; (8000614 <GPIO_WritePin+0xdc>)
 80005f2:	400b      	ands	r3, r1
 80005f4:	6153      	str	r3, [r2, #20]
					 }
					result = OK;
 80005f6:	2300      	movs	r3, #0
 80005f8:	75fb      	strb	r3, [r7, #23]
				else
				{
					result = NOK;
				}

		break;
 80005fa:	e001      	b.n	8000600 <GPIO_WritePin+0xc8>
					result = NOK;
 80005fc:	2301      	movs	r3, #1
 80005fe:	75fb      	strb	r3, [r7, #23]
		break;
 8000600:	bf00      	nop

	}// end switch

	return result;
 8000602:	7dfb      	ldrb	r3, [r7, #23]
}
 8000604:	4618      	mov	r0, r3
 8000606:	371c      	adds	r7, #28
 8000608:	46bd      	mov	sp, r7
 800060a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800060e:	4770      	bx	lr
 8000610:	40020000 	.word	0x40020000
 8000614:	40020400 	.word	0x40020400

08000618 <__libc_init_array>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	4d0d      	ldr	r5, [pc, #52]	; (8000650 <__libc_init_array+0x38>)
 800061c:	4c0d      	ldr	r4, [pc, #52]	; (8000654 <__libc_init_array+0x3c>)
 800061e:	1b64      	subs	r4, r4, r5
 8000620:	10a4      	asrs	r4, r4, #2
 8000622:	2600      	movs	r6, #0
 8000624:	42a6      	cmp	r6, r4
 8000626:	d109      	bne.n	800063c <__libc_init_array+0x24>
 8000628:	4d0b      	ldr	r5, [pc, #44]	; (8000658 <__libc_init_array+0x40>)
 800062a:	4c0c      	ldr	r4, [pc, #48]	; (800065c <__libc_init_array+0x44>)
 800062c:	f000 f818 	bl	8000660 <_init>
 8000630:	1b64      	subs	r4, r4, r5
 8000632:	10a4      	asrs	r4, r4, #2
 8000634:	2600      	movs	r6, #0
 8000636:	42a6      	cmp	r6, r4
 8000638:	d105      	bne.n	8000646 <__libc_init_array+0x2e>
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000640:	4798      	blx	r3
 8000642:	3601      	adds	r6, #1
 8000644:	e7ee      	b.n	8000624 <__libc_init_array+0xc>
 8000646:	f855 3b04 	ldr.w	r3, [r5], #4
 800064a:	4798      	blx	r3
 800064c:	3601      	adds	r6, #1
 800064e:	e7f2      	b.n	8000636 <__libc_init_array+0x1e>
 8000650:	08000678 	.word	0x08000678
 8000654:	08000678 	.word	0x08000678
 8000658:	08000678 	.word	0x08000678
 800065c:	0800067c 	.word	0x0800067c

08000660 <_init>:
 8000660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000662:	bf00      	nop
 8000664:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000666:	bc08      	pop	{r3}
 8000668:	469e      	mov	lr, r3
 800066a:	4770      	bx	lr

0800066c <_fini>:
 800066c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800066e:	bf00      	nop
 8000670:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000672:	bc08      	pop	{r3}
 8000674:	469e      	mov	lr, r3
 8000676:	4770      	bx	lr
