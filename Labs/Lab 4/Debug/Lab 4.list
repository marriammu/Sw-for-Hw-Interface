
Lab 4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004c4  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000050  08000658  08000658  00010658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080006a8  080006a8  00020028  2**0
                  CONTENTS
  4 .ARM          00000000  080006a8  080006a8  00020028  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006a8  080006a8  00020028  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006a8  080006a8  000106a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006ac  080006ac  000106ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000028  20000000  080006b0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000028  080006d8  00020028  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000044  080006d8  00020044  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020028  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009b3  00000000  00000000  00020058  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000302  00000000  00000000  00020a0b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a8  00000000  00000000  00020d10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000070  00000000  00000000  00020db8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000ded6  00000000  00000000  00020e28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000fd6  00000000  00000000  0002ecfe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004ff36  00000000  00000000  0002fcd4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0007fc0a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000018c  00000000  00000000  0007fc60  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000028 	.word	0x20000028
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000640 	.word	0x08000640

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	2000002c 	.word	0x2000002c
 80001d0:	08000640 	.word	0x08000640

080001d4 <GPIO_Init>:
	*((unsigned int *)GPIO_ENR(PortID)) |= (0x01 << PortID);

}

void GPIO_Init(unsigned char PortID, unsigned char PinNum, unsigned char PinMode,
               unsigned char DefaultState) {
 80001d4:	b490      	push	{r4, r7}
 80001d6:	b082      	sub	sp, #8
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4604      	mov	r4, r0
 80001dc:	4608      	mov	r0, r1
 80001de:	4611      	mov	r1, r2
 80001e0:	461a      	mov	r2, r3
 80001e2:	4623      	mov	r3, r4
 80001e4:	71fb      	strb	r3, [r7, #7]
 80001e6:	4603      	mov	r3, r0
 80001e8:	71bb      	strb	r3, [r7, #6]
 80001ea:	460b      	mov	r3, r1
 80001ec:	717b      	strb	r3, [r7, #5]
 80001ee:	4613      	mov	r3, r2
 80001f0:	713b      	strb	r3, [r7, #4]
	*((unsigned int *)look_up[PortID][0]) &= ~(0x03 << 2 * PinNum);
 80001f2:	79fa      	ldrb	r2, [r7, #7]
 80001f4:	4959      	ldr	r1, [pc, #356]	; (800035c <GPIO_Init+0x188>)
 80001f6:	4613      	mov	r3, r2
 80001f8:	009b      	lsls	r3, r3, #2
 80001fa:	4413      	add	r3, r2
 80001fc:	009b      	lsls	r3, r3, #2
 80001fe:	440b      	add	r3, r1
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	6819      	ldr	r1, [r3, #0]
 8000204:	79bb      	ldrb	r3, [r7, #6]
 8000206:	005b      	lsls	r3, r3, #1
 8000208:	2203      	movs	r2, #3
 800020a:	fa02 f303 	lsl.w	r3, r2, r3
 800020e:	43db      	mvns	r3, r3
 8000210:	461c      	mov	r4, r3
 8000212:	79fa      	ldrb	r2, [r7, #7]
 8000214:	4851      	ldr	r0, [pc, #324]	; (800035c <GPIO_Init+0x188>)
 8000216:	4613      	mov	r3, r2
 8000218:	009b      	lsls	r3, r3, #2
 800021a:	4413      	add	r3, r2
 800021c:	009b      	lsls	r3, r3, #2
 800021e:	4403      	add	r3, r0
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	461a      	mov	r2, r3
 8000224:	ea01 0304 	and.w	r3, r1, r4
 8000228:	6013      	str	r3, [r2, #0]
	*((unsigned int *)look_up[PortID][0]) |= PinMode << 2 * PinNum;
 800022a:	79fa      	ldrb	r2, [r7, #7]
 800022c:	494b      	ldr	r1, [pc, #300]	; (800035c <GPIO_Init+0x188>)
 800022e:	4613      	mov	r3, r2
 8000230:	009b      	lsls	r3, r3, #2
 8000232:	4413      	add	r3, r2
 8000234:	009b      	lsls	r3, r3, #2
 8000236:	440b      	add	r3, r1
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	6819      	ldr	r1, [r3, #0]
 800023c:	797a      	ldrb	r2, [r7, #5]
 800023e:	79bb      	ldrb	r3, [r7, #6]
 8000240:	005b      	lsls	r3, r3, #1
 8000242:	fa02 f303 	lsl.w	r3, r2, r3
 8000246:	461c      	mov	r4, r3
 8000248:	79fa      	ldrb	r2, [r7, #7]
 800024a:	4844      	ldr	r0, [pc, #272]	; (800035c <GPIO_Init+0x188>)
 800024c:	4613      	mov	r3, r2
 800024e:	009b      	lsls	r3, r3, #2
 8000250:	4413      	add	r3, r2
 8000252:	009b      	lsls	r3, r3, #2
 8000254:	4403      	add	r3, r0
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	461a      	mov	r2, r3
 800025a:	ea41 0304 	orr.w	r3, r1, r4
 800025e:	6013      	str	r3, [r2, #0]
	*((unsigned int *)look_up[PortID][1]) &= ~(1 << PinNum);
 8000260:	79fa      	ldrb	r2, [r7, #7]
 8000262:	493e      	ldr	r1, [pc, #248]	; (800035c <GPIO_Init+0x188>)
 8000264:	4613      	mov	r3, r2
 8000266:	009b      	lsls	r3, r3, #2
 8000268:	4413      	add	r3, r2
 800026a:	009b      	lsls	r3, r3, #2
 800026c:	440b      	add	r3, r1
 800026e:	3304      	adds	r3, #4
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	6819      	ldr	r1, [r3, #0]
 8000274:	79bb      	ldrb	r3, [r7, #6]
 8000276:	2201      	movs	r2, #1
 8000278:	fa02 f303 	lsl.w	r3, r2, r3
 800027c:	43db      	mvns	r3, r3
 800027e:	461c      	mov	r4, r3
 8000280:	79fa      	ldrb	r2, [r7, #7]
 8000282:	4836      	ldr	r0, [pc, #216]	; (800035c <GPIO_Init+0x188>)
 8000284:	4613      	mov	r3, r2
 8000286:	009b      	lsls	r3, r3, #2
 8000288:	4413      	add	r3, r2
 800028a:	009b      	lsls	r3, r3, #2
 800028c:	4403      	add	r3, r0
 800028e:	3304      	adds	r3, #4
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	461a      	mov	r2, r3
 8000294:	ea01 0304 	and.w	r3, r1, r4
 8000298:	6013      	str	r3, [r2, #0]
	*((unsigned int *)look_up[PortID][1])|= ((DefaultState & _OUTTYPE_MASK) >> _OUTTYPE_SHIFT) << PinNum;
 800029a:	79fa      	ldrb	r2, [r7, #7]
 800029c:	492f      	ldr	r1, [pc, #188]	; (800035c <GPIO_Init+0x188>)
 800029e:	4613      	mov	r3, r2
 80002a0:	009b      	lsls	r3, r3, #2
 80002a2:	4413      	add	r3, r2
 80002a4:	009b      	lsls	r3, r3, #2
 80002a6:	440b      	add	r3, r1
 80002a8:	3304      	adds	r3, #4
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	6819      	ldr	r1, [r3, #0]
 80002ae:	793b      	ldrb	r3, [r7, #4]
 80002b0:	f003 0201 	and.w	r2, r3, #1
 80002b4:	79bb      	ldrb	r3, [r7, #6]
 80002b6:	fa02 f303 	lsl.w	r3, r2, r3
 80002ba:	461c      	mov	r4, r3
 80002bc:	79fa      	ldrb	r2, [r7, #7]
 80002be:	4827      	ldr	r0, [pc, #156]	; (800035c <GPIO_Init+0x188>)
 80002c0:	4613      	mov	r3, r2
 80002c2:	009b      	lsls	r3, r3, #2
 80002c4:	4413      	add	r3, r2
 80002c6:	009b      	lsls	r3, r3, #2
 80002c8:	4403      	add	r3, r0
 80002ca:	3304      	adds	r3, #4
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	461a      	mov	r2, r3
 80002d0:	ea41 0304 	orr.w	r3, r1, r4
 80002d4:	6013      	str	r3, [r2, #0]
	*((unsigned int *)look_up[PortID][2]) &= ~(0x03 << 2 * PinNum);
 80002d6:	79fa      	ldrb	r2, [r7, #7]
 80002d8:	4920      	ldr	r1, [pc, #128]	; (800035c <GPIO_Init+0x188>)
 80002da:	4613      	mov	r3, r2
 80002dc:	009b      	lsls	r3, r3, #2
 80002de:	4413      	add	r3, r2
 80002e0:	009b      	lsls	r3, r3, #2
 80002e2:	440b      	add	r3, r1
 80002e4:	3308      	adds	r3, #8
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	6819      	ldr	r1, [r3, #0]
 80002ea:	79bb      	ldrb	r3, [r7, #6]
 80002ec:	005b      	lsls	r3, r3, #1
 80002ee:	2203      	movs	r2, #3
 80002f0:	fa02 f303 	lsl.w	r3, r2, r3
 80002f4:	43db      	mvns	r3, r3
 80002f6:	461c      	mov	r4, r3
 80002f8:	79fa      	ldrb	r2, [r7, #7]
 80002fa:	4818      	ldr	r0, [pc, #96]	; (800035c <GPIO_Init+0x188>)
 80002fc:	4613      	mov	r3, r2
 80002fe:	009b      	lsls	r3, r3, #2
 8000300:	4413      	add	r3, r2
 8000302:	009b      	lsls	r3, r3, #2
 8000304:	4403      	add	r3, r0
 8000306:	3308      	adds	r3, #8
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	461a      	mov	r2, r3
 800030c:	ea01 0304 	and.w	r3, r1, r4
 8000310:	6013      	str	r3, [r2, #0]
	*((unsigned int *)look_up[PortID][2]) |= ((DefaultState & _PUPD_MASK) >> _PUPD_SHIFT) << (2 * PinNum);
 8000312:	79fa      	ldrb	r2, [r7, #7]
 8000314:	4911      	ldr	r1, [pc, #68]	; (800035c <GPIO_Init+0x188>)
 8000316:	4613      	mov	r3, r2
 8000318:	009b      	lsls	r3, r3, #2
 800031a:	4413      	add	r3, r2
 800031c:	009b      	lsls	r3, r3, #2
 800031e:	440b      	add	r3, r1
 8000320:	3308      	adds	r3, #8
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	6819      	ldr	r1, [r3, #0]
 8000326:	793b      	ldrb	r3, [r7, #4]
 8000328:	105b      	asrs	r3, r3, #1
 800032a:	f003 0203 	and.w	r2, r3, #3
 800032e:	79bb      	ldrb	r3, [r7, #6]
 8000330:	005b      	lsls	r3, r3, #1
 8000332:	fa02 f303 	lsl.w	r3, r2, r3
 8000336:	461c      	mov	r4, r3
 8000338:	79fa      	ldrb	r2, [r7, #7]
 800033a:	4808      	ldr	r0, [pc, #32]	; (800035c <GPIO_Init+0x188>)
 800033c:	4613      	mov	r3, r2
 800033e:	009b      	lsls	r3, r3, #2
 8000340:	4413      	add	r3, r2
 8000342:	009b      	lsls	r3, r3, #2
 8000344:	4403      	add	r3, r0
 8000346:	3308      	adds	r3, #8
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	461a      	mov	r2, r3
 800034c:	ea41 0304 	orr.w	r3, r1, r4
 8000350:	6013      	str	r3, [r2, #0]
}
 8000352:	bf00      	nop
 8000354:	3708      	adds	r7, #8
 8000356:	46bd      	mov	sp, r7
 8000358:	bc90      	pop	{r4, r7}
 800035a:	4770      	bx	lr
 800035c:	20000000 	.word	0x20000000

08000360 <GPIO_WritePin>:

unsigned char GPIO_WritePin(unsigned char PortID, unsigned char PinNum,
                            unsigned char Data) {
 8000360:	b490      	push	{r4, r7}
 8000362:	b084      	sub	sp, #16
 8000364:	af00      	add	r7, sp, #0
 8000366:	4603      	mov	r3, r0
 8000368:	71fb      	strb	r3, [r7, #7]
 800036a:	460b      	mov	r3, r1
 800036c:	71bb      	strb	r3, [r7, #6]
 800036e:	4613      	mov	r3, r2
 8000370:	717b      	strb	r3, [r7, #5]
  unsigned char result;

      if (((*((unsigned int *)look_up[PortID][0]) & (0x03 << 2 * PinNum)) >> (2 * PinNum)) == 1) {
 8000372:	79fa      	ldrb	r2, [r7, #7]
 8000374:	492d      	ldr	r1, [pc, #180]	; (800042c <GPIO_WritePin+0xcc>)
 8000376:	4613      	mov	r3, r2
 8000378:	009b      	lsls	r3, r3, #2
 800037a:	4413      	add	r3, r2
 800037c:	009b      	lsls	r3, r3, #2
 800037e:	440b      	add	r3, r1
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	79ba      	ldrb	r2, [r7, #6]
 8000386:	0052      	lsls	r2, r2, #1
 8000388:	2103      	movs	r1, #3
 800038a:	fa01 f202 	lsl.w	r2, r1, r2
 800038e:	401a      	ands	r2, r3
 8000390:	79bb      	ldrb	r3, [r7, #6]
 8000392:	005b      	lsls	r3, r3, #1
 8000394:	fa22 f303 	lsr.w	r3, r2, r3
 8000398:	2b01      	cmp	r3, #1
 800039a:	d13f      	bne.n	800041c <GPIO_WritePin+0xbc>
        if (Data) {
 800039c:	797b      	ldrb	r3, [r7, #5]
 800039e:	2b00      	cmp	r3, #0
 80003a0:	d01c      	beq.n	80003dc <GPIO_WritePin+0x7c>
          *((unsigned int *)look_up[PortID][4]) |= (1 << PinNum);
 80003a2:	79fa      	ldrb	r2, [r7, #7]
 80003a4:	4921      	ldr	r1, [pc, #132]	; (800042c <GPIO_WritePin+0xcc>)
 80003a6:	4613      	mov	r3, r2
 80003a8:	009b      	lsls	r3, r3, #2
 80003aa:	4413      	add	r3, r2
 80003ac:	009b      	lsls	r3, r3, #2
 80003ae:	440b      	add	r3, r1
 80003b0:	3310      	adds	r3, #16
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	6819      	ldr	r1, [r3, #0]
 80003b6:	79bb      	ldrb	r3, [r7, #6]
 80003b8:	2201      	movs	r2, #1
 80003ba:	fa02 f303 	lsl.w	r3, r2, r3
 80003be:	461c      	mov	r4, r3
 80003c0:	79fa      	ldrb	r2, [r7, #7]
 80003c2:	481a      	ldr	r0, [pc, #104]	; (800042c <GPIO_WritePin+0xcc>)
 80003c4:	4613      	mov	r3, r2
 80003c6:	009b      	lsls	r3, r3, #2
 80003c8:	4413      	add	r3, r2
 80003ca:	009b      	lsls	r3, r3, #2
 80003cc:	4403      	add	r3, r0
 80003ce:	3310      	adds	r3, #16
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	461a      	mov	r2, r3
 80003d4:	ea41 0304 	orr.w	r3, r1, r4
 80003d8:	6013      	str	r3, [r2, #0]
 80003da:	e01c      	b.n	8000416 <GPIO_WritePin+0xb6>
        } else {
           *((unsigned int *)look_up[PortID][4]) &= ~(1 << PinNum);
 80003dc:	79fa      	ldrb	r2, [r7, #7]
 80003de:	4913      	ldr	r1, [pc, #76]	; (800042c <GPIO_WritePin+0xcc>)
 80003e0:	4613      	mov	r3, r2
 80003e2:	009b      	lsls	r3, r3, #2
 80003e4:	4413      	add	r3, r2
 80003e6:	009b      	lsls	r3, r3, #2
 80003e8:	440b      	add	r3, r1
 80003ea:	3310      	adds	r3, #16
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	6819      	ldr	r1, [r3, #0]
 80003f0:	79bb      	ldrb	r3, [r7, #6]
 80003f2:	2201      	movs	r2, #1
 80003f4:	fa02 f303 	lsl.w	r3, r2, r3
 80003f8:	43db      	mvns	r3, r3
 80003fa:	461c      	mov	r4, r3
 80003fc:	79fa      	ldrb	r2, [r7, #7]
 80003fe:	480b      	ldr	r0, [pc, #44]	; (800042c <GPIO_WritePin+0xcc>)
 8000400:	4613      	mov	r3, r2
 8000402:	009b      	lsls	r3, r3, #2
 8000404:	4413      	add	r3, r2
 8000406:	009b      	lsls	r3, r3, #2
 8000408:	4403      	add	r3, r0
 800040a:	3310      	adds	r3, #16
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	461a      	mov	r2, r3
 8000410:	ea01 0304 	and.w	r3, r1, r4
 8000414:	6013      	str	r3, [r2, #0]
        }
        result = OK;
 8000416:	2300      	movs	r3, #0
 8000418:	73fb      	strb	r3, [r7, #15]
 800041a:	e001      	b.n	8000420 <GPIO_WritePin+0xc0>
      } else {
        result = NOK;
 800041c:	2301      	movs	r3, #1
 800041e:	73fb      	strb	r3, [r7, #15]
      }

   // end switch

  return result;
 8000420:	7bfb      	ldrb	r3, [r7, #15]
}
 8000422:	4618      	mov	r0, r3
 8000424:	3710      	adds	r7, #16
 8000426:	46bd      	mov	sp, r7
 8000428:	bc90      	pop	{r4, r7}
 800042a:	4770      	bx	lr
 800042c:	20000000 	.word	0x20000000

08000430 <main>:
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"

int main(void) {
 8000430:	b580      	push	{r7, lr}
 8000432:	b09a      	sub	sp, #104	; 0x68
 8000434:	af00      	add	r7, sp, #0
	char sevenSegment[11][8] = {
 8000436:	463b      	mov	r3, r7
 8000438:	2258      	movs	r2, #88	; 0x58
 800043a:	2100      	movs	r1, #0
 800043c:	4618      	mov	r0, r3
 800043e:	f000 f8f7 	bl	8000630 <memset>
 8000442:	4a40      	ldr	r2, [pc, #256]	; (8000544 <main+0x114>)
 8000444:	463b      	mov	r3, r7
 8000446:	e892 0003 	ldmia.w	r2, {r0, r1}
 800044a:	e883 0003 	stmia.w	r3, {r0, r1}
 800044e:	4a3e      	ldr	r2, [pc, #248]	; (8000548 <main+0x118>)
 8000450:	f107 0308 	add.w	r3, r7, #8
 8000454:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000458:	e883 0003 	stmia.w	r3, {r0, r1}
 800045c:	4a3b      	ldr	r2, [pc, #236]	; (800054c <main+0x11c>)
 800045e:	f107 0310 	add.w	r3, r7, #16
 8000462:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000466:	e883 0003 	stmia.w	r3, {r0, r1}
 800046a:	4a39      	ldr	r2, [pc, #228]	; (8000550 <main+0x120>)
 800046c:	f107 0318 	add.w	r3, r7, #24
 8000470:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000474:	e883 0003 	stmia.w	r3, {r0, r1}
 8000478:	4a36      	ldr	r2, [pc, #216]	; (8000554 <main+0x124>)
 800047a:	f107 0320 	add.w	r3, r7, #32
 800047e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000482:	e883 0003 	stmia.w	r3, {r0, r1}
 8000486:	4a34      	ldr	r2, [pc, #208]	; (8000558 <main+0x128>)
 8000488:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800048c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000490:	e883 0003 	stmia.w	r3, {r0, r1}
 8000494:	4a31      	ldr	r2, [pc, #196]	; (800055c <main+0x12c>)
 8000496:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800049a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800049e:	e883 0003 	stmia.w	r3, {r0, r1}
 80004a2:	4a2f      	ldr	r2, [pc, #188]	; (8000560 <main+0x130>)
 80004a4:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80004a8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80004ac:	e883 0003 	stmia.w	r3, {r0, r1}
 80004b0:	4a2c      	ldr	r2, [pc, #176]	; (8000564 <main+0x134>)
 80004b2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80004b6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80004ba:	e883 0003 	stmia.w	r3, {r0, r1}
 80004be:	4a2a      	ldr	r2, [pc, #168]	; (8000568 <main+0x138>)
 80004c0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80004c4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80004c8:	e883 0003 	stmia.w	r3, {r0, r1}
	  { 1, 1, 1, 0, 0, 0, 0},  // 7
	  { 1, 1, 1, 1, 1, 1, 1},  // 8
	  { 1, 1, 1, 1, 0, 1, 1}   // 9
	};

	for (int i=0;i<=7;i++){
 80004cc:	2300      	movs	r3, #0
 80004ce:	667b      	str	r3, [r7, #100]	; 0x64
 80004d0:	e009      	b.n	80004e6 <main+0xb6>
		GPIO_Init(0, i, OUTPUT, PUSH_PULL);
 80004d2:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80004d4:	b2d9      	uxtb	r1, r3
 80004d6:	2300      	movs	r3, #0
 80004d8:	2201      	movs	r2, #1
 80004da:	2000      	movs	r0, #0
 80004dc:	f7ff fe7a 	bl	80001d4 <GPIO_Init>
	for (int i=0;i<=7;i++){
 80004e0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80004e2:	3301      	adds	r3, #1
 80004e4:	667b      	str	r3, [r7, #100]	; 0x64
 80004e6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80004e8:	2b07      	cmp	r3, #7
 80004ea:	ddf2      	ble.n	80004d2 <main+0xa2>
	}
  while (1) {
	  int i;
	  int j;
	  //led on
	  for (i =0;i<10;i++)
 80004ec:	2300      	movs	r3, #0
 80004ee:	663b      	str	r3, [r7, #96]	; 0x60
 80004f0:	e024      	b.n	800053c <main+0x10c>
	  {
		  for (j =0 ;j<8;j++){
 80004f2:	2300      	movs	r3, #0
 80004f4:	65fb      	str	r3, [r7, #92]	; 0x5c
 80004f6:	e011      	b.n	800051c <main+0xec>
			  GPIO_WritePin(0, j, sevenSegment [i][j]);
 80004f8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80004fa:	b2d9      	uxtb	r1, r3
 80004fc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80004fe:	00db      	lsls	r3, r3, #3
 8000500:	f107 0268 	add.w	r2, r7, #104	; 0x68
 8000504:	441a      	add	r2, r3
 8000506:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000508:	4413      	add	r3, r2
 800050a:	3b68      	subs	r3, #104	; 0x68
 800050c:	781b      	ldrb	r3, [r3, #0]
 800050e:	461a      	mov	r2, r3
 8000510:	2000      	movs	r0, #0
 8000512:	f7ff ff25 	bl	8000360 <GPIO_WritePin>
		  for (j =0 ;j<8;j++){
 8000516:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000518:	3301      	adds	r3, #1
 800051a:	65fb      	str	r3, [r7, #92]	; 0x5c
 800051c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800051e:	2b07      	cmp	r3, #7
 8000520:	ddea      	ble.n	80004f8 <main+0xc8>
		  }
		  for (int i = 0; i < 1000000; i++)
 8000522:	2300      	movs	r3, #0
 8000524:	65bb      	str	r3, [r7, #88]	; 0x58
 8000526:	e002      	b.n	800052e <main+0xfe>
 8000528:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800052a:	3301      	adds	r3, #1
 800052c:	65bb      	str	r3, [r7, #88]	; 0x58
 800052e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8000530:	4a0e      	ldr	r2, [pc, #56]	; (800056c <main+0x13c>)
 8000532:	4293      	cmp	r3, r2
 8000534:	ddf8      	ble.n	8000528 <main+0xf8>
	  for (i =0;i<10;i++)
 8000536:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8000538:	3301      	adds	r3, #1
 800053a:	663b      	str	r3, [r7, #96]	; 0x60
 800053c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800053e:	2b09      	cmp	r3, #9
 8000540:	ddd7      	ble.n	80004f2 <main+0xc2>
  while (1) {
 8000542:	e7d3      	b.n	80004ec <main+0xbc>
 8000544:	08000658 	.word	0x08000658
 8000548:	08000660 	.word	0x08000660
 800054c:	08000668 	.word	0x08000668
 8000550:	08000670 	.word	0x08000670
 8000554:	08000678 	.word	0x08000678
 8000558:	08000680 	.word	0x08000680
 800055c:	08000688 	.word	0x08000688
 8000560:	08000690 	.word	0x08000690
 8000564:	08000698 	.word	0x08000698
 8000568:	080006a0 	.word	0x080006a0
 800056c:	000f423f 	.word	0x000f423f

08000570 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000570:	b480      	push	{r7}
 8000572:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000574:	4b06      	ldr	r3, [pc, #24]	; (8000590 <SystemInit+0x20>)
 8000576:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800057a:	4a05      	ldr	r2, [pc, #20]	; (8000590 <SystemInit+0x20>)
 800057c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000580:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000584:	bf00      	nop
 8000586:	46bd      	mov	sp, r7
 8000588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop
 8000590:	e000ed00 	.word	0xe000ed00

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000598:	480d      	ldr	r0, [pc, #52]	; (80005d0 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 800059a:	490e      	ldr	r1, [pc, #56]	; (80005d4 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 800059c:	4a0e      	ldr	r2, [pc, #56]	; (80005d8 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800059e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005a0:	e002      	b.n	80005a8 <LoopCopyDataInit>

080005a2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005a2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005a4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005a6:	3304      	adds	r3, #4

080005a8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005a8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005aa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005ac:	d3f9      	bcc.n	80005a2 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80005b0:	4c0b      	ldr	r4, [pc, #44]	; (80005e0 <LoopFillZerobss+0x26>)
  movs r3, #0
 80005b2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005b4:	e001      	b.n	80005ba <LoopFillZerobss>

080005b6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005b6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005b8:	3204      	adds	r2, #4

080005ba <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005ba:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005bc:	d3fb      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f7ff ffd7 	bl	8000570 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f000 f811 	bl	80005e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f7ff ff33 	bl	8000430 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80005cc:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80005d0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005d4:	20000028 	.word	0x20000028
  ldr r2, =_sidata
 80005d8:	080006b0 	.word	0x080006b0
  ldr r2, =_sbss
 80005dc:	20000028 	.word	0x20000028
  ldr r4, =_ebss
 80005e0:	20000044 	.word	0x20000044

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>
	...

080005e8 <__libc_init_array>:
 80005e8:	b570      	push	{r4, r5, r6, lr}
 80005ea:	4d0d      	ldr	r5, [pc, #52]	; (8000620 <__libc_init_array+0x38>)
 80005ec:	4c0d      	ldr	r4, [pc, #52]	; (8000624 <__libc_init_array+0x3c>)
 80005ee:	1b64      	subs	r4, r4, r5
 80005f0:	10a4      	asrs	r4, r4, #2
 80005f2:	2600      	movs	r6, #0
 80005f4:	42a6      	cmp	r6, r4
 80005f6:	d109      	bne.n	800060c <__libc_init_array+0x24>
 80005f8:	4d0b      	ldr	r5, [pc, #44]	; (8000628 <__libc_init_array+0x40>)
 80005fa:	4c0c      	ldr	r4, [pc, #48]	; (800062c <__libc_init_array+0x44>)
 80005fc:	f000 f820 	bl	8000640 <_init>
 8000600:	1b64      	subs	r4, r4, r5
 8000602:	10a4      	asrs	r4, r4, #2
 8000604:	2600      	movs	r6, #0
 8000606:	42a6      	cmp	r6, r4
 8000608:	d105      	bne.n	8000616 <__libc_init_array+0x2e>
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000610:	4798      	blx	r3
 8000612:	3601      	adds	r6, #1
 8000614:	e7ee      	b.n	80005f4 <__libc_init_array+0xc>
 8000616:	f855 3b04 	ldr.w	r3, [r5], #4
 800061a:	4798      	blx	r3
 800061c:	3601      	adds	r6, #1
 800061e:	e7f2      	b.n	8000606 <__libc_init_array+0x1e>
 8000620:	080006a8 	.word	0x080006a8
 8000624:	080006a8 	.word	0x080006a8
 8000628:	080006a8 	.word	0x080006a8
 800062c:	080006ac 	.word	0x080006ac

08000630 <memset>:
 8000630:	4402      	add	r2, r0
 8000632:	4603      	mov	r3, r0
 8000634:	4293      	cmp	r3, r2
 8000636:	d100      	bne.n	800063a <memset+0xa>
 8000638:	4770      	bx	lr
 800063a:	f803 1b01 	strb.w	r1, [r3], #1
 800063e:	e7f9      	b.n	8000634 <memset+0x4>

08000640 <_init>:
 8000640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000642:	bf00      	nop
 8000644:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000646:	bc08      	pop	{r3}
 8000648:	469e      	mov	lr, r3
 800064a:	4770      	bx	lr

0800064c <_fini>:
 800064c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800064e:	bf00      	nop
 8000650:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000652:	bc08      	pop	{r3}
 8000654:	469e      	mov	lr, r3
 8000656:	4770      	bx	lr
