
lab3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000019c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000330  08000338  00010338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000330  08000330  00010338  2**0
                  CONTENTS
  4 .ARM          00000000  08000330  08000330  00010338  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000330  08000338  00010338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000330  08000330  00010330  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000334  08000334  00010334  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000338  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000338  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010338  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009a1  00000000  00000000  00010368  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000023e  00000000  00000000  00010d09  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  00010f48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000048  00000000  00000000  00010fb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dd5f  00000000  00000000  00011000  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000a1d  00000000  00000000  0001ed5f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fae4  00000000  00000000  0001f77c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0006f260  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000b0  00000000  00000000  0006f2b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000318 	.word	0x08000318

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000318 	.word	0x08000318

080001d4 <main>:
#include "stm32f401cc_interface.h"

int main(void) {
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	RCC_AHB1ENR |=(1<<0);
 80001da:	4b1c      	ldr	r3, [pc, #112]	; (800024c <main+0x78>)
 80001dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001de:	4a1b      	ldr	r2, [pc, #108]	; (800024c <main+0x78>)
 80001e0:	f043 0301 	orr.w	r3, r3, #1
 80001e4:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA_MODER |= (0x01)<<(2*0);
 80001e6:	4b1a      	ldr	r3, [pc, #104]	; (8000250 <main+0x7c>)
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	4a19      	ldr	r2, [pc, #100]	; (8000250 <main+0x7c>)
 80001ec:	f043 0301 	orr.w	r3, r3, #1
 80001f0:	6013      	str	r3, [r2, #0]
	GPIOA_OTYPER &= ~(1<<0);
 80001f2:	4b17      	ldr	r3, [pc, #92]	; (8000250 <main+0x7c>)
 80001f4:	685b      	ldr	r3, [r3, #4]
 80001f6:	4a16      	ldr	r2, [pc, #88]	; (8000250 <main+0x7c>)
 80001f8:	f023 0301 	bic.w	r3, r3, #1
 80001fc:	6053      	str	r3, [r2, #4]
	GPIOA_ODR &= ~(1<<0);
 80001fe:	4b14      	ldr	r3, [pc, #80]	; (8000250 <main+0x7c>)
 8000200:	695b      	ldr	r3, [r3, #20]
 8000202:	4a13      	ldr	r2, [pc, #76]	; (8000250 <main+0x7c>)
 8000204:	f023 0301 	bic.w	r3, r3, #1
 8000208:	6153      	str	r3, [r2, #20]


  while (1) {
	  GPIOA_ODR |=(1<<0);
 800020a:	4b11      	ldr	r3, [pc, #68]	; (8000250 <main+0x7c>)
 800020c:	695b      	ldr	r3, [r3, #20]
 800020e:	4a10      	ldr	r2, [pc, #64]	; (8000250 <main+0x7c>)
 8000210:	f043 0301 	orr.w	r3, r3, #1
 8000214:	6153      	str	r3, [r2, #20]
	  for(int i = 0;i<1000000;i++)
 8000216:	2300      	movs	r3, #0
 8000218:	607b      	str	r3, [r7, #4]
 800021a:	e002      	b.n	8000222 <main+0x4e>
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	3301      	adds	r3, #1
 8000220:	607b      	str	r3, [r7, #4]
 8000222:	687b      	ldr	r3, [r7, #4]
 8000224:	4a0b      	ldr	r2, [pc, #44]	; (8000254 <main+0x80>)
 8000226:	4293      	cmp	r3, r2
 8000228:	ddf8      	ble.n	800021c <main+0x48>
	  {}

	  GPIOA_ODR &= ~(1<<0);
 800022a:	4b09      	ldr	r3, [pc, #36]	; (8000250 <main+0x7c>)
 800022c:	695b      	ldr	r3, [r3, #20]
 800022e:	4a08      	ldr	r2, [pc, #32]	; (8000250 <main+0x7c>)
 8000230:	f023 0301 	bic.w	r3, r3, #1
 8000234:	6153      	str	r3, [r2, #20]
	  for(int i = 0;i<1000000;i++)
 8000236:	2300      	movs	r3, #0
 8000238:	603b      	str	r3, [r7, #0]
 800023a:	e002      	b.n	8000242 <main+0x6e>
 800023c:	683b      	ldr	r3, [r7, #0]
 800023e:	3301      	adds	r3, #1
 8000240:	603b      	str	r3, [r7, #0]
 8000242:	683b      	ldr	r3, [r7, #0]
 8000244:	4a03      	ldr	r2, [pc, #12]	; (8000254 <main+0x80>)
 8000246:	4293      	cmp	r3, r2
 8000248:	ddf8      	ble.n	800023c <main+0x68>
	  GPIOA_ODR |=(1<<0);
 800024a:	e7de      	b.n	800020a <main+0x36>
 800024c:	40023800 	.word	0x40023800
 8000250:	40020000 	.word	0x40020000
 8000254:	000f423f 	.word	0x000f423f

08000258 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000258:	b480      	push	{r7}
 800025a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800025c:	4b06      	ldr	r3, [pc, #24]	; (8000278 <SystemInit+0x20>)
 800025e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000262:	4a05      	ldr	r2, [pc, #20]	; (8000278 <SystemInit+0x20>)
 8000264:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000268:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800026c:	bf00      	nop
 800026e:	46bd      	mov	sp, r7
 8000270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000274:	4770      	bx	lr
 8000276:	bf00      	nop
 8000278:	e000ed00 	.word	0xe000ed00

0800027c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 800027c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80002b4 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000280:	480d      	ldr	r0, [pc, #52]	; (80002b8 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000282:	490e      	ldr	r1, [pc, #56]	; (80002bc <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000284:	4a0e      	ldr	r2, [pc, #56]	; (80002c0 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000286:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000288:	e002      	b.n	8000290 <LoopCopyDataInit>

0800028a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800028c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800028e:	3304      	adds	r3, #4

08000290 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000290:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000292:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000294:	d3f9      	bcc.n	800028a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000296:	4a0b      	ldr	r2, [pc, #44]	; (80002c4 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000298:	4c0b      	ldr	r4, [pc, #44]	; (80002c8 <LoopFillZerobss+0x26>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800029c:	e001      	b.n	80002a2 <LoopFillZerobss>

0800029e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800029e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a0:	3204      	adds	r2, #4

080002a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a4:	d3fb      	bcc.n	800029e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80002a6:	f7ff ffd7 	bl	8000258 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80002aa:	f000 f811 	bl	80002d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80002ae:	f7ff ff91 	bl	80001d4 <main>
  bx  lr    
 80002b2:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80002b4:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80002b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002bc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002c0:	08000338 	.word	0x08000338
  ldr r2, =_sbss
 80002c4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c8:	2000001c 	.word	0x2000001c

080002cc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80002cc:	e7fe      	b.n	80002cc <ADC_IRQHandler>
	...

080002d0 <__libc_init_array>:
 80002d0:	b570      	push	{r4, r5, r6, lr}
 80002d2:	4d0d      	ldr	r5, [pc, #52]	; (8000308 <__libc_init_array+0x38>)
 80002d4:	4c0d      	ldr	r4, [pc, #52]	; (800030c <__libc_init_array+0x3c>)
 80002d6:	1b64      	subs	r4, r4, r5
 80002d8:	10a4      	asrs	r4, r4, #2
 80002da:	2600      	movs	r6, #0
 80002dc:	42a6      	cmp	r6, r4
 80002de:	d109      	bne.n	80002f4 <__libc_init_array+0x24>
 80002e0:	4d0b      	ldr	r5, [pc, #44]	; (8000310 <__libc_init_array+0x40>)
 80002e2:	4c0c      	ldr	r4, [pc, #48]	; (8000314 <__libc_init_array+0x44>)
 80002e4:	f000 f818 	bl	8000318 <_init>
 80002e8:	1b64      	subs	r4, r4, r5
 80002ea:	10a4      	asrs	r4, r4, #2
 80002ec:	2600      	movs	r6, #0
 80002ee:	42a6      	cmp	r6, r4
 80002f0:	d105      	bne.n	80002fe <__libc_init_array+0x2e>
 80002f2:	bd70      	pop	{r4, r5, r6, pc}
 80002f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f8:	4798      	blx	r3
 80002fa:	3601      	adds	r6, #1
 80002fc:	e7ee      	b.n	80002dc <__libc_init_array+0xc>
 80002fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000302:	4798      	blx	r3
 8000304:	3601      	adds	r6, #1
 8000306:	e7f2      	b.n	80002ee <__libc_init_array+0x1e>
 8000308:	08000330 	.word	0x08000330
 800030c:	08000330 	.word	0x08000330
 8000310:	08000330 	.word	0x08000330
 8000314:	08000334 	.word	0x08000334

08000318 <_init>:
 8000318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800031a:	bf00      	nop
 800031c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800031e:	bc08      	pop	{r3}
 8000320:	469e      	mov	lr, r3
 8000322:	4770      	bx	lr

08000324 <_fini>:
 8000324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000326:	bf00      	nop
 8000328:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800032a:	bc08      	pop	{r3}
 800032c:	469e      	mov	lr, r3
 800032e:	4770      	bx	lr
