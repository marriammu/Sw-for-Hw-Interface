
Task 3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000580  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000714  0800071c  0001071c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000714  08000714  0001071c  2**0
                  CONTENTS
  4 .ARM          00000000  08000714  08000714  0001071c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000714  0800071c  0001071c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000714  08000714  00010714  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000718  08000718  00010718  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001071c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800071c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800071c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001071c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000bce  00000000  00000000  0001074c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000322  00000000  00000000  0001131a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a0  00000000  00000000  00011640  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000068  00000000  00000000  000116e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000de8b  00000000  00000000  00011748  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000010c3  00000000  00000000  0001f5d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fcc2  00000000  00000000  00020696  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00070358  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000013c  00000000  00000000  000703ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080006fc 	.word	0x080006fc

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080006fc 	.word	0x080006fc

080001d4 <main>:
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"

int main(void) {
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b084      	sub	sp, #16
 80001d8:	af00      	add	r7, sp, #0

		GPIO_Init('B', 5, OUTPUT, PUSH_PULL);
 80001da:	2300      	movs	r3, #0
 80001dc:	2201      	movs	r2, #1
 80001de:	2105      	movs	r1, #5
 80001e0:	2042      	movs	r0, #66	; 0x42
 80001e2:	f000 f897 	bl	8000314 <GPIO_Init>
		GPIO_Init('B', 6, OUTPUT, PUSH_PULL);
 80001e6:	2300      	movs	r3, #0
 80001e8:	2201      	movs	r2, #1
 80001ea:	2106      	movs	r1, #6
 80001ec:	2042      	movs	r0, #66	; 0x42
 80001ee:	f000 f891 	bl	8000314 <GPIO_Init>
		GPIO_Init('B', 7, OUTPUT, PUSH_PULL);
 80001f2:	2300      	movs	r3, #0
 80001f4:	2201      	movs	r2, #1
 80001f6:	2107      	movs	r1, #7
 80001f8:	2042      	movs	r0, #66	; 0x42
 80001fa:	f000 f88b 	bl	8000314 <GPIO_Init>
		GPIO_Init('B', 3, INPUT, PULL_UP);
 80001fe:	2301      	movs	r3, #1
 8000200:	2200      	movs	r2, #0
 8000202:	2103      	movs	r1, #3
 8000204:	2042      	movs	r0, #66	; 0x42
 8000206:	f000 f885 	bl	8000314 <GPIO_Init>
		GPIO_WritePin('B', 5,1);
 800020a:	2201      	movs	r2, #1
 800020c:	2105      	movs	r1, #5
 800020e:	2042      	movs	r0, #66	; 0x42
 8000210:	f000 f9a0 	bl	8000554 <GPIO_WritePin>
		GPIO_WritePin('B', 6,1);
 8000214:	2201      	movs	r2, #1
 8000216:	2106      	movs	r1, #6
 8000218:	2042      	movs	r0, #66	; 0x42
 800021a:	f000 f99b 	bl	8000554 <GPIO_WritePin>
		GPIO_WritePin('B', 7,1);
 800021e:	2201      	movs	r2, #1
 8000220:	2107      	movs	r1, #7
 8000222:	2042      	movs	r0, #66	; 0x42
 8000224:	f000 f996 	bl	8000554 <GPIO_WritePin>

		 char i = 0;
 8000228:	2300      	movs	r3, #0
 800022a:	73fb      	strb	r3, [r7, #15]
		 char ButtonSatus1;
		 char ButtonSatus2;
  while (1) {
      ButtonSatus1=GPIO_ReadPin('B',3);
 800022c:	2103      	movs	r1, #3
 800022e:	2042      	movs	r0, #66	; 0x42
 8000230:	f000 f9fa 	bl	8000628 <GPIO_ReadPin>
 8000234:	4603      	mov	r3, r0
 8000236:	71fb      	strb	r3, [r7, #7]
      if (  ButtonSatus1==1 ){
 8000238:	79fb      	ldrb	r3, [r7, #7]
 800023a:	2b01      	cmp	r3, #1
 800023c:	d1f6      	bne.n	800022c <main+0x58>
    	    for (int n=0;n<2000;n++)
 800023e:	2300      	movs	r3, #0
 8000240:	60bb      	str	r3, [r7, #8]
 8000242:	e002      	b.n	800024a <main+0x76>
 8000244:	68bb      	ldr	r3, [r7, #8]
 8000246:	3301      	adds	r3, #1
 8000248:	60bb      	str	r3, [r7, #8]
 800024a:	68bb      	ldr	r3, [r7, #8]
 800024c:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8000250:	dbf8      	blt.n	8000244 <main+0x70>
    	    {}

    	    ButtonSatus2=GPIO_ReadPin('B',3);
 8000252:	2103      	movs	r1, #3
 8000254:	2042      	movs	r0, #66	; 0x42
 8000256:	f000 f9e7 	bl	8000628 <GPIO_ReadPin>
 800025a:	4603      	mov	r3, r0
 800025c:	71bb      	strb	r3, [r7, #6]
    	      if ( ButtonSatus2==0){
 800025e:	79bb      	ldrb	r3, [r7, #6]
 8000260:	2b00      	cmp	r3, #0
 8000262:	d1e3      	bne.n	800022c <main+0x58>
    	    	  GPIO_WritePin('B', 5,i&0x01);
 8000264:	7bfb      	ldrb	r3, [r7, #15]
 8000266:	f003 0301 	and.w	r3, r3, #1
 800026a:	461a      	mov	r2, r3
 800026c:	2105      	movs	r1, #5
 800026e:	2042      	movs	r0, #66	; 0x42
 8000270:	f000 f970 	bl	8000554 <GPIO_WritePin>
    	    	  GPIO_WritePin('B', 6,i&0x02);
 8000274:	7bfb      	ldrb	r3, [r7, #15]
 8000276:	f003 0302 	and.w	r3, r3, #2
 800027a:	461a      	mov	r2, r3
 800027c:	2106      	movs	r1, #6
 800027e:	2042      	movs	r0, #66	; 0x42
 8000280:	f000 f968 	bl	8000554 <GPIO_WritePin>
    	    	  GPIO_WritePin('B', 7,i&0x04);
 8000284:	7bfb      	ldrb	r3, [r7, #15]
 8000286:	f003 0304 	and.w	r3, r3, #4
 800028a:	461a      	mov	r2, r3
 800028c:	2107      	movs	r1, #7
 800028e:	2042      	movs	r0, #66	; 0x42
 8000290:	f000 f960 	bl	8000554 <GPIO_WritePin>

                      i++;
 8000294:	7bfb      	ldrb	r3, [r7, #15]
 8000296:	3301      	adds	r3, #1
 8000298:	73fb      	strb	r3, [r7, #15]
      ButtonSatus1=GPIO_ReadPin('B',3);
 800029a:	e7c7      	b.n	800022c <main+0x58>

0800029c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800029c:	b480      	push	{r7}
 800029e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80002a0:	4b06      	ldr	r3, [pc, #24]	; (80002bc <SystemInit+0x20>)
 80002a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80002a6:	4a05      	ldr	r2, [pc, #20]	; (80002bc <SystemInit+0x20>)
 80002a8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80002ac:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80002b0:	bf00      	nop
 80002b2:	46bd      	mov	sp, r7
 80002b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b8:	4770      	bx	lr
 80002ba:	bf00      	nop
 80002bc:	e000ed00 	.word	0xe000ed00

080002c0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80002c0:	f8df d034 	ldr.w	sp, [pc, #52]	; 80002f8 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80002c4:	480d      	ldr	r0, [pc, #52]	; (80002fc <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80002c6:	490e      	ldr	r1, [pc, #56]	; (8000300 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80002c8:	4a0e      	ldr	r2, [pc, #56]	; (8000304 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80002ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002cc:	e002      	b.n	80002d4 <LoopCopyDataInit>

080002ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d2:	3304      	adds	r3, #4

080002d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002d8:	d3f9      	bcc.n	80002ce <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002da:	4a0b      	ldr	r2, [pc, #44]	; (8000308 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80002dc:	4c0b      	ldr	r4, [pc, #44]	; (800030c <LoopFillZerobss+0x26>)
  movs r3, #0
 80002de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e0:	e001      	b.n	80002e6 <LoopFillZerobss>

080002e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e4:	3204      	adds	r2, #4

080002e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002e8:	d3fb      	bcc.n	80002e2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80002ea:	f7ff ffd7 	bl	800029c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80002ee:	f000 f9e1 	bl	80006b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80002f2:	f7ff ff6f 	bl	80001d4 <main>
  bx  lr    
 80002f6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80002f8:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000304:	0800071c 	.word	0x0800071c
  ldr r2, =_sbss
 8000308:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800030c:	2000001c 	.word	0x2000001c

08000310 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC_IRQHandler>
	...

08000314 <GPIO_Init>:
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"

void GPIO_Init( char Port, unsigned int PIN_NO, unsigned int PIN_Dir, unsigned int Default_State)
{
 8000314:	b480      	push	{r7}
 8000316:	b085      	sub	sp, #20
 8000318:	af00      	add	r7, sp, #0
 800031a:	60b9      	str	r1, [r7, #8]
 800031c:	607a      	str	r2, [r7, #4]
 800031e:	603b      	str	r3, [r7, #0]
 8000320:	4603      	mov	r3, r0
 8000322:	73fb      	strb	r3, [r7, #15]
	//enable clock of port
	switch (Port)
 8000324:	7bfb      	ldrb	r3, [r7, #15]
 8000326:	2b41      	cmp	r3, #65	; 0x41
 8000328:	d003      	beq.n	8000332 <GPIO_Init+0x1e>
 800032a:	2b42      	cmp	r3, #66	; 0x42
 800032c:	f000 8083 	beq.w	8000436 <GPIO_Init+0x122>
					break;
				}//end switch
		break;
	}

}
 8000330:	e103      	b.n	800053a <GPIO_Init+0x226>
				RCC_AHB1ENR |= (0x01 <<0);
 8000332:	4b85      	ldr	r3, [pc, #532]	; (8000548 <GPIO_Init+0x234>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a84      	ldr	r2, [pc, #528]	; (8000548 <GPIO_Init+0x234>)
 8000338:	f043 0301 	orr.w	r3, r3, #1
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	2b03      	cmp	r3, #3
 8000342:	d859      	bhi.n	80003f8 <GPIO_Init+0xe4>
 8000344:	a201      	add	r2, pc, #4	; (adr r2, 800034c <GPIO_Init+0x38>)
 8000346:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800034a:	bf00      	nop
 800034c:	0800035d 	.word	0x0800035d
 8000350:	080003b1 	.word	0x080003b1
 8000354:	080003c9 	.word	0x080003c9
 8000358:	080003e1 	.word	0x080003e1
							GPIOA_MODER &= ~(0x03 << 2*PIN_NO);
 800035c:	4b7b      	ldr	r3, [pc, #492]	; (800054c <GPIO_Init+0x238>)
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	68ba      	ldr	r2, [r7, #8]
 8000362:	0052      	lsls	r2, r2, #1
 8000364:	2103      	movs	r1, #3
 8000366:	fa01 f202 	lsl.w	r2, r1, r2
 800036a:	43d2      	mvns	r2, r2
 800036c:	4611      	mov	r1, r2
 800036e:	4a77      	ldr	r2, [pc, #476]	; (800054c <GPIO_Init+0x238>)
 8000370:	400b      	ands	r3, r1
 8000372:	6013      	str	r3, [r2, #0]
 8000374:	683b      	ldr	r3, [r7, #0]
 8000376:	2b01      	cmp	r3, #1
 8000378:	d003      	beq.n	8000382 <GPIO_Init+0x6e>
 800037a:	683b      	ldr	r3, [r7, #0]
 800037c:	2b10      	cmp	r3, #16
 800037e:	d00b      	beq.n	8000398 <GPIO_Init+0x84>
					break;
 8000380:	e03a      	b.n	80003f8 <GPIO_Init+0xe4>
							       GPIOA_PUPDR |= (0x01<<PIN_NO);
 8000382:	4b72      	ldr	r3, [pc, #456]	; (800054c <GPIO_Init+0x238>)
 8000384:	68db      	ldr	r3, [r3, #12]
 8000386:	2101      	movs	r1, #1
 8000388:	68ba      	ldr	r2, [r7, #8]
 800038a:	fa01 f202 	lsl.w	r2, r1, r2
 800038e:	4611      	mov	r1, r2
 8000390:	4a6e      	ldr	r2, [pc, #440]	; (800054c <GPIO_Init+0x238>)
 8000392:	430b      	orrs	r3, r1
 8000394:	60d3      	str	r3, [r2, #12]
					               break;
 8000396:	e00a      	b.n	80003ae <GPIO_Init+0x9a>
					        GPIOA_PUPDR |= (0x10<<PIN_NO);
 8000398:	4b6c      	ldr	r3, [pc, #432]	; (800054c <GPIO_Init+0x238>)
 800039a:	68db      	ldr	r3, [r3, #12]
 800039c:	2110      	movs	r1, #16
 800039e:	68ba      	ldr	r2, [r7, #8]
 80003a0:	fa01 f202 	lsl.w	r2, r1, r2
 80003a4:	4611      	mov	r1, r2
 80003a6:	4a69      	ldr	r2, [pc, #420]	; (800054c <GPIO_Init+0x238>)
 80003a8:	430b      	orrs	r3, r1
 80003aa:	60d3      	str	r3, [r2, #12]
					break;
 80003ac:	bf00      	nop
					break;
 80003ae:	e023      	b.n	80003f8 <GPIO_Init+0xe4>
							GPIOA_MODER |= (0x01 << 2*PIN_NO);
 80003b0:	4b66      	ldr	r3, [pc, #408]	; (800054c <GPIO_Init+0x238>)
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	68ba      	ldr	r2, [r7, #8]
 80003b6:	0052      	lsls	r2, r2, #1
 80003b8:	2101      	movs	r1, #1
 80003ba:	fa01 f202 	lsl.w	r2, r1, r2
 80003be:	4611      	mov	r1, r2
 80003c0:	4a62      	ldr	r2, [pc, #392]	; (800054c <GPIO_Init+0x238>)
 80003c2:	430b      	orrs	r3, r1
 80003c4:	6013      	str	r3, [r2, #0]
					break;
 80003c6:	e017      	b.n	80003f8 <GPIO_Init+0xe4>
							GPIOA_MODER |= (0x02 << 2*PIN_NO);
 80003c8:	4b60      	ldr	r3, [pc, #384]	; (800054c <GPIO_Init+0x238>)
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	68ba      	ldr	r2, [r7, #8]
 80003ce:	0052      	lsls	r2, r2, #1
 80003d0:	2102      	movs	r1, #2
 80003d2:	fa01 f202 	lsl.w	r2, r1, r2
 80003d6:	4611      	mov	r1, r2
 80003d8:	4a5c      	ldr	r2, [pc, #368]	; (800054c <GPIO_Init+0x238>)
 80003da:	430b      	orrs	r3, r1
 80003dc:	6013      	str	r3, [r2, #0]
					break;
 80003de:	e00b      	b.n	80003f8 <GPIO_Init+0xe4>
							GPIOA_MODER |= (0x03 << 2*PIN_NO);
 80003e0:	4b5a      	ldr	r3, [pc, #360]	; (800054c <GPIO_Init+0x238>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	68ba      	ldr	r2, [r7, #8]
 80003e6:	0052      	lsls	r2, r2, #1
 80003e8:	2103      	movs	r1, #3
 80003ea:	fa01 f202 	lsl.w	r2, r1, r2
 80003ee:	4611      	mov	r1, r2
 80003f0:	4a56      	ldr	r2, [pc, #344]	; (800054c <GPIO_Init+0x238>)
 80003f2:	430b      	orrs	r3, r1
 80003f4:	6013      	str	r3, [r2, #0]
					break;
 80003f6:	bf00      	nop
 80003f8:	683b      	ldr	r3, [r7, #0]
 80003fa:	2b00      	cmp	r3, #0
 80003fc:	d003      	beq.n	8000406 <GPIO_Init+0xf2>
 80003fe:	683b      	ldr	r3, [r7, #0]
 8000400:	2b01      	cmp	r3, #1
 8000402:	d00c      	beq.n	800041e <GPIO_Init+0x10a>
		break;
 8000404:	e099      	b.n	800053a <GPIO_Init+0x226>
							GPIOA_OTYPER &= ~(0x01<<PIN_NO);
 8000406:	4b51      	ldr	r3, [pc, #324]	; (800054c <GPIO_Init+0x238>)
 8000408:	685b      	ldr	r3, [r3, #4]
 800040a:	2101      	movs	r1, #1
 800040c:	68ba      	ldr	r2, [r7, #8]
 800040e:	fa01 f202 	lsl.w	r2, r1, r2
 8000412:	43d2      	mvns	r2, r2
 8000414:	4611      	mov	r1, r2
 8000416:	4a4d      	ldr	r2, [pc, #308]	; (800054c <GPIO_Init+0x238>)
 8000418:	400b      	ands	r3, r1
 800041a:	6053      	str	r3, [r2, #4]
					break;
 800041c:	e00a      	b.n	8000434 <GPIO_Init+0x120>
							GPIOA_OTYPER |= (0x01<<PIN_NO);
 800041e:	4b4b      	ldr	r3, [pc, #300]	; (800054c <GPIO_Init+0x238>)
 8000420:	685b      	ldr	r3, [r3, #4]
 8000422:	2101      	movs	r1, #1
 8000424:	68ba      	ldr	r2, [r7, #8]
 8000426:	fa01 f202 	lsl.w	r2, r1, r2
 800042a:	4611      	mov	r1, r2
 800042c:	4a47      	ldr	r2, [pc, #284]	; (800054c <GPIO_Init+0x238>)
 800042e:	430b      	orrs	r3, r1
 8000430:	6053      	str	r3, [r2, #4]
					break;
 8000432:	bf00      	nop
		break;
 8000434:	e081      	b.n	800053a <GPIO_Init+0x226>
				RCC_AHB1ENR |= (0x01 <<1);
 8000436:	4b44      	ldr	r3, [pc, #272]	; (8000548 <GPIO_Init+0x234>)
 8000438:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043a:	4a43      	ldr	r2, [pc, #268]	; (8000548 <GPIO_Init+0x234>)
 800043c:	f043 0302 	orr.w	r3, r3, #2
 8000440:	6313      	str	r3, [r2, #48]	; 0x30
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	2b03      	cmp	r3, #3
 8000446:	d859      	bhi.n	80004fc <GPIO_Init+0x1e8>
 8000448:	a201      	add	r2, pc, #4	; (adr r2, 8000450 <GPIO_Init+0x13c>)
 800044a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800044e:	bf00      	nop
 8000450:	08000461 	.word	0x08000461
 8000454:	080004b5 	.word	0x080004b5
 8000458:	080004cd 	.word	0x080004cd
 800045c:	080004e5 	.word	0x080004e5
							GPIOB_MODER &= ~(0x03 << 2*PIN_NO);
 8000460:	4b3b      	ldr	r3, [pc, #236]	; (8000550 <GPIO_Init+0x23c>)
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	68ba      	ldr	r2, [r7, #8]
 8000466:	0052      	lsls	r2, r2, #1
 8000468:	2103      	movs	r1, #3
 800046a:	fa01 f202 	lsl.w	r2, r1, r2
 800046e:	43d2      	mvns	r2, r2
 8000470:	4611      	mov	r1, r2
 8000472:	4a37      	ldr	r2, [pc, #220]	; (8000550 <GPIO_Init+0x23c>)
 8000474:	400b      	ands	r3, r1
 8000476:	6013      	str	r3, [r2, #0]
 8000478:	683b      	ldr	r3, [r7, #0]
 800047a:	2b01      	cmp	r3, #1
 800047c:	d003      	beq.n	8000486 <GPIO_Init+0x172>
 800047e:	683b      	ldr	r3, [r7, #0]
 8000480:	2b10      	cmp	r3, #16
 8000482:	d00b      	beq.n	800049c <GPIO_Init+0x188>
					break;
 8000484:	e03a      	b.n	80004fc <GPIO_Init+0x1e8>
					     GPIOB_PUPDR |= (0x01<<PIN_NO);
 8000486:	4b32      	ldr	r3, [pc, #200]	; (8000550 <GPIO_Init+0x23c>)
 8000488:	68db      	ldr	r3, [r3, #12]
 800048a:	2101      	movs	r1, #1
 800048c:	68ba      	ldr	r2, [r7, #8]
 800048e:	fa01 f202 	lsl.w	r2, r1, r2
 8000492:	4611      	mov	r1, r2
 8000494:	4a2e      	ldr	r2, [pc, #184]	; (8000550 <GPIO_Init+0x23c>)
 8000496:	430b      	orrs	r3, r1
 8000498:	60d3      	str	r3, [r2, #12]
					break;
 800049a:	e00a      	b.n	80004b2 <GPIO_Init+0x19e>
						 GPIOB_PUPDR |= (0x10<<PIN_NO);
 800049c:	4b2c      	ldr	r3, [pc, #176]	; (8000550 <GPIO_Init+0x23c>)
 800049e:	68db      	ldr	r3, [r3, #12]
 80004a0:	2110      	movs	r1, #16
 80004a2:	68ba      	ldr	r2, [r7, #8]
 80004a4:	fa01 f202 	lsl.w	r2, r1, r2
 80004a8:	4611      	mov	r1, r2
 80004aa:	4a29      	ldr	r2, [pc, #164]	; (8000550 <GPIO_Init+0x23c>)
 80004ac:	430b      	orrs	r3, r1
 80004ae:	60d3      	str	r3, [r2, #12]
					break;
 80004b0:	bf00      	nop
					break;
 80004b2:	e023      	b.n	80004fc <GPIO_Init+0x1e8>
							GPIOB_MODER |= (0x01 << 2*PIN_NO);
 80004b4:	4b26      	ldr	r3, [pc, #152]	; (8000550 <GPIO_Init+0x23c>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	68ba      	ldr	r2, [r7, #8]
 80004ba:	0052      	lsls	r2, r2, #1
 80004bc:	2101      	movs	r1, #1
 80004be:	fa01 f202 	lsl.w	r2, r1, r2
 80004c2:	4611      	mov	r1, r2
 80004c4:	4a22      	ldr	r2, [pc, #136]	; (8000550 <GPIO_Init+0x23c>)
 80004c6:	430b      	orrs	r3, r1
 80004c8:	6013      	str	r3, [r2, #0]
					break;
 80004ca:	e017      	b.n	80004fc <GPIO_Init+0x1e8>
							GPIOB_MODER |= (0x02 << 2*PIN_NO);
 80004cc:	4b20      	ldr	r3, [pc, #128]	; (8000550 <GPIO_Init+0x23c>)
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	68ba      	ldr	r2, [r7, #8]
 80004d2:	0052      	lsls	r2, r2, #1
 80004d4:	2102      	movs	r1, #2
 80004d6:	fa01 f202 	lsl.w	r2, r1, r2
 80004da:	4611      	mov	r1, r2
 80004dc:	4a1c      	ldr	r2, [pc, #112]	; (8000550 <GPIO_Init+0x23c>)
 80004de:	430b      	orrs	r3, r1
 80004e0:	6013      	str	r3, [r2, #0]
					break;
 80004e2:	e00b      	b.n	80004fc <GPIO_Init+0x1e8>
							GPIOB_MODER |= (0x03 << 2*PIN_NO);
 80004e4:	4b1a      	ldr	r3, [pc, #104]	; (8000550 <GPIO_Init+0x23c>)
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	68ba      	ldr	r2, [r7, #8]
 80004ea:	0052      	lsls	r2, r2, #1
 80004ec:	2103      	movs	r1, #3
 80004ee:	fa01 f202 	lsl.w	r2, r1, r2
 80004f2:	4611      	mov	r1, r2
 80004f4:	4a16      	ldr	r2, [pc, #88]	; (8000550 <GPIO_Init+0x23c>)
 80004f6:	430b      	orrs	r3, r1
 80004f8:	6013      	str	r3, [r2, #0]
					break;
 80004fa:	bf00      	nop
 80004fc:	683b      	ldr	r3, [r7, #0]
 80004fe:	2b00      	cmp	r3, #0
 8000500:	d003      	beq.n	800050a <GPIO_Init+0x1f6>
 8000502:	683b      	ldr	r3, [r7, #0]
 8000504:	2b01      	cmp	r3, #1
 8000506:	d00c      	beq.n	8000522 <GPIO_Init+0x20e>
		break;
 8000508:	e016      	b.n	8000538 <GPIO_Init+0x224>
							GPIOB_OTYPER &= ~(0x01<<PIN_NO);
 800050a:	4b11      	ldr	r3, [pc, #68]	; (8000550 <GPIO_Init+0x23c>)
 800050c:	685b      	ldr	r3, [r3, #4]
 800050e:	2101      	movs	r1, #1
 8000510:	68ba      	ldr	r2, [r7, #8]
 8000512:	fa01 f202 	lsl.w	r2, r1, r2
 8000516:	43d2      	mvns	r2, r2
 8000518:	4611      	mov	r1, r2
 800051a:	4a0d      	ldr	r2, [pc, #52]	; (8000550 <GPIO_Init+0x23c>)
 800051c:	400b      	ands	r3, r1
 800051e:	6053      	str	r3, [r2, #4]
					break;
 8000520:	e00a      	b.n	8000538 <GPIO_Init+0x224>
							GPIOB_OTYPER |= (0x01<<PIN_NO);
 8000522:	4b0b      	ldr	r3, [pc, #44]	; (8000550 <GPIO_Init+0x23c>)
 8000524:	685b      	ldr	r3, [r3, #4]
 8000526:	2101      	movs	r1, #1
 8000528:	68ba      	ldr	r2, [r7, #8]
 800052a:	fa01 f202 	lsl.w	r2, r1, r2
 800052e:	4611      	mov	r1, r2
 8000530:	4a07      	ldr	r2, [pc, #28]	; (8000550 <GPIO_Init+0x23c>)
 8000532:	430b      	orrs	r3, r1
 8000534:	6053      	str	r3, [r2, #4]
					break;
 8000536:	bf00      	nop
		break;
 8000538:	bf00      	nop
}
 800053a:	bf00      	nop
 800053c:	3714      	adds	r7, #20
 800053e:	46bd      	mov	sp, r7
 8000540:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000544:	4770      	bx	lr
 8000546:	bf00      	nop
 8000548:	40023800 	.word	0x40023800
 800054c:	40020000 	.word	0x40020000
 8000550:	40020400 	.word	0x40020400

08000554 <GPIO_WritePin>:



unsigned char GPIO_WritePin(char PORT, unsigned int PIN_NO, unsigned int DATA)
{
 8000554:	b480      	push	{r7}
 8000556:	b087      	sub	sp, #28
 8000558:	af00      	add	r7, sp, #0
 800055a:	4603      	mov	r3, r0
 800055c:	60b9      	str	r1, [r7, #8]
 800055e:	607a      	str	r2, [r7, #4]
 8000560:	73fb      	strb	r3, [r7, #15]
    unsigned char result;
    switch (PORT)
 8000562:	7bfb      	ldrb	r3, [r7, #15]
 8000564:	2b41      	cmp	r3, #65	; 0x41
 8000566:	d002      	beq.n	800056e <GPIO_WritePin+0x1a>
 8000568:	2b42      	cmp	r3, #66	; 0x42
 800056a:	d029      	beq.n	80005c0 <GPIO_WritePin+0x6c>
 800056c:	e051      	b.n	8000612 <GPIO_WritePin+0xbe>
    {
    case ('A'):
        if ((GPIOA_MODER >> 2 * PIN_NO) & 0x01)
 800056e:	4b2c      	ldr	r3, [pc, #176]	; (8000620 <GPIO_WritePin+0xcc>)
 8000570:	681a      	ldr	r2, [r3, #0]
 8000572:	68bb      	ldr	r3, [r7, #8]
 8000574:	005b      	lsls	r3, r3, #1
 8000576:	fa22 f303 	lsr.w	r3, r2, r3
 800057a:	f003 0301 	and.w	r3, r3, #1
 800057e:	2b00      	cmp	r3, #0
 8000580:	d01b      	beq.n	80005ba <GPIO_WritePin+0x66>
        {
            if (DATA)
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	2b00      	cmp	r3, #0
 8000586:	d00a      	beq.n	800059e <GPIO_WritePin+0x4a>
            {
                GPIOA_ODR |= (1 << PIN_NO);
 8000588:	4b25      	ldr	r3, [pc, #148]	; (8000620 <GPIO_WritePin+0xcc>)
 800058a:	695b      	ldr	r3, [r3, #20]
 800058c:	2101      	movs	r1, #1
 800058e:	68ba      	ldr	r2, [r7, #8]
 8000590:	fa01 f202 	lsl.w	r2, r1, r2
 8000594:	4611      	mov	r1, r2
 8000596:	4a22      	ldr	r2, [pc, #136]	; (8000620 <GPIO_WritePin+0xcc>)
 8000598:	430b      	orrs	r3, r1
 800059a:	6153      	str	r3, [r2, #20]
 800059c:	e00a      	b.n	80005b4 <GPIO_WritePin+0x60>
            }
            else
            {
                GPIOA_ODR &= ~(1 << PIN_NO);
 800059e:	4b20      	ldr	r3, [pc, #128]	; (8000620 <GPIO_WritePin+0xcc>)
 80005a0:	695b      	ldr	r3, [r3, #20]
 80005a2:	2101      	movs	r1, #1
 80005a4:	68ba      	ldr	r2, [r7, #8]
 80005a6:	fa01 f202 	lsl.w	r2, r1, r2
 80005aa:	43d2      	mvns	r2, r2
 80005ac:	4611      	mov	r1, r2
 80005ae:	4a1c      	ldr	r2, [pc, #112]	; (8000620 <GPIO_WritePin+0xcc>)
 80005b0:	400b      	ands	r3, r1
 80005b2:	6153      	str	r3, [r2, #20]
            }
            result = OK;
 80005b4:	2300      	movs	r3, #0
 80005b6:	75fb      	strb	r3, [r7, #23]
        }
        else
        {
            result = NOK;
        }
        break;
 80005b8:	e02b      	b.n	8000612 <GPIO_WritePin+0xbe>
            result = NOK;
 80005ba:	2301      	movs	r3, #1
 80005bc:	75fb      	strb	r3, [r7, #23]
        break;
 80005be:	e028      	b.n	8000612 <GPIO_WritePin+0xbe>
    case ('B'):
        if ((GPIOB_MODER >> 2 * PIN_NO) & 0x01)
 80005c0:	4b18      	ldr	r3, [pc, #96]	; (8000624 <GPIO_WritePin+0xd0>)
 80005c2:	681a      	ldr	r2, [r3, #0]
 80005c4:	68bb      	ldr	r3, [r7, #8]
 80005c6:	005b      	lsls	r3, r3, #1
 80005c8:	fa22 f303 	lsr.w	r3, r2, r3
 80005cc:	f003 0301 	and.w	r3, r3, #1
 80005d0:	2b00      	cmp	r3, #0
 80005d2:	d01b      	beq.n	800060c <GPIO_WritePin+0xb8>
        {
            if (DATA)
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	2b00      	cmp	r3, #0
 80005d8:	d00a      	beq.n	80005f0 <GPIO_WritePin+0x9c>
            {
                GPIOB_ODR |= (1 << PIN_NO);
 80005da:	4b12      	ldr	r3, [pc, #72]	; (8000624 <GPIO_WritePin+0xd0>)
 80005dc:	695b      	ldr	r3, [r3, #20]
 80005de:	2101      	movs	r1, #1
 80005e0:	68ba      	ldr	r2, [r7, #8]
 80005e2:	fa01 f202 	lsl.w	r2, r1, r2
 80005e6:	4611      	mov	r1, r2
 80005e8:	4a0e      	ldr	r2, [pc, #56]	; (8000624 <GPIO_WritePin+0xd0>)
 80005ea:	430b      	orrs	r3, r1
 80005ec:	6153      	str	r3, [r2, #20]
 80005ee:	e00a      	b.n	8000606 <GPIO_WritePin+0xb2>
            }
            else
            {
                GPIOB_ODR &= ~(1 << PIN_NO);
 80005f0:	4b0c      	ldr	r3, [pc, #48]	; (8000624 <GPIO_WritePin+0xd0>)
 80005f2:	695b      	ldr	r3, [r3, #20]
 80005f4:	2101      	movs	r1, #1
 80005f6:	68ba      	ldr	r2, [r7, #8]
 80005f8:	fa01 f202 	lsl.w	r2, r1, r2
 80005fc:	43d2      	mvns	r2, r2
 80005fe:	4611      	mov	r1, r2
 8000600:	4a08      	ldr	r2, [pc, #32]	; (8000624 <GPIO_WritePin+0xd0>)
 8000602:	400b      	ands	r3, r1
 8000604:	6153      	str	r3, [r2, #20]
            }
            result = OK;
 8000606:	2300      	movs	r3, #0
 8000608:	75fb      	strb	r3, [r7, #23]
        else
        {
            result = NOK;
        }

        break;
 800060a:	e001      	b.n	8000610 <GPIO_WritePin+0xbc>
            result = NOK;
 800060c:	2301      	movs	r3, #1
 800060e:	75fb      	strb	r3, [r7, #23]
        break;
 8000610:	bf00      	nop

    }

    return result;
 8000612:	7dfb      	ldrb	r3, [r7, #23]
}
 8000614:	4618      	mov	r0, r3
 8000616:	371c      	adds	r7, #28
 8000618:	46bd      	mov	sp, r7
 800061a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800061e:	4770      	bx	lr
 8000620:	40020000 	.word	0x40020000
 8000624:	40020400 	.word	0x40020400

08000628 <GPIO_ReadPin>:
unsigned char GPIO_ReadPin(char PORT, unsigned int PIN_NO)
{
 8000628:	b480      	push	{r7}
 800062a:	b085      	sub	sp, #20
 800062c:	af00      	add	r7, sp, #0
 800062e:	4603      	mov	r3, r0
 8000630:	6039      	str	r1, [r7, #0]
 8000632:	71fb      	strb	r3, [r7, #7]
    unsigned char result;
    switch (PORT)
 8000634:	79fb      	ldrb	r3, [r7, #7]
 8000636:	2b41      	cmp	r3, #65	; 0x41
 8000638:	d002      	beq.n	8000640 <GPIO_ReadPin+0x18>
 800063a:	2b42      	cmp	r3, #66	; 0x42
 800063c:	d017      	beq.n	800066e <GPIO_ReadPin+0x46>
 800063e:	e02d      	b.n	800069c <GPIO_ReadPin+0x74>
    {
    case ('A'):
        if (((GPIOA_MODER >> 2 * PIN_NO) & 0x01)==0)
 8000640:	4b1a      	ldr	r3, [pc, #104]	; (80006ac <GPIO_ReadPin+0x84>)
 8000642:	681a      	ldr	r2, [r3, #0]
 8000644:	683b      	ldr	r3, [r7, #0]
 8000646:	005b      	lsls	r3, r3, #1
 8000648:	fa22 f303 	lsr.w	r3, r2, r3
 800064c:	f003 0301 	and.w	r3, r3, #1
 8000650:	2b00      	cmp	r3, #0
 8000652:	d109      	bne.n	8000668 <GPIO_ReadPin+0x40>
        {
            result = (GPIOA_IDR >> PIN_NO) & 0x01;
 8000654:	4b15      	ldr	r3, [pc, #84]	; (80006ac <GPIO_ReadPin+0x84>)
 8000656:	691a      	ldr	r2, [r3, #16]
 8000658:	683b      	ldr	r3, [r7, #0]
 800065a:	fa22 f303 	lsr.w	r3, r2, r3
 800065e:	b2db      	uxtb	r3, r3
 8000660:	f003 0301 	and.w	r3, r3, #1
 8000664:	73fb      	strb	r3, [r7, #15]
        }
        else
        {
            result = 0;
        }
        break;
 8000666:	e019      	b.n	800069c <GPIO_ReadPin+0x74>
            result = 0;
 8000668:	2300      	movs	r3, #0
 800066a:	73fb      	strb	r3, [r7, #15]
        break;
 800066c:	e016      	b.n	800069c <GPIO_ReadPin+0x74>
    case ('B'):
        if (((GPIOB_MODER >> 2 * PIN_NO) & 0x01)==0)
 800066e:	4b10      	ldr	r3, [pc, #64]	; (80006b0 <GPIO_ReadPin+0x88>)
 8000670:	681a      	ldr	r2, [r3, #0]
 8000672:	683b      	ldr	r3, [r7, #0]
 8000674:	005b      	lsls	r3, r3, #1
 8000676:	fa22 f303 	lsr.w	r3, r2, r3
 800067a:	f003 0301 	and.w	r3, r3, #1
 800067e:	2b00      	cmp	r3, #0
 8000680:	d109      	bne.n	8000696 <GPIO_ReadPin+0x6e>
        {
            result = (GPIOB_IDR >> PIN_NO) & 0x01;
 8000682:	4b0b      	ldr	r3, [pc, #44]	; (80006b0 <GPIO_ReadPin+0x88>)
 8000684:	691a      	ldr	r2, [r3, #16]
 8000686:	683b      	ldr	r3, [r7, #0]
 8000688:	fa22 f303 	lsr.w	r3, r2, r3
 800068c:	b2db      	uxtb	r3, r3
 800068e:	f003 0301 	and.w	r3, r3, #1
 8000692:	73fb      	strb	r3, [r7, #15]
        else
        {
            result = 0;
        }

        break;
 8000694:	e001      	b.n	800069a <GPIO_ReadPin+0x72>
            result = 0;
 8000696:	2300      	movs	r3, #0
 8000698:	73fb      	strb	r3, [r7, #15]
        break;
 800069a:	bf00      	nop

    }

    return result;
 800069c:	7bfb      	ldrb	r3, [r7, #15]
}
 800069e:	4618      	mov	r0, r3
 80006a0:	3714      	adds	r7, #20
 80006a2:	46bd      	mov	sp, r7
 80006a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006a8:	4770      	bx	lr
 80006aa:	bf00      	nop
 80006ac:	40020000 	.word	0x40020000
 80006b0:	40020400 	.word	0x40020400

080006b4 <__libc_init_array>:
 80006b4:	b570      	push	{r4, r5, r6, lr}
 80006b6:	4d0d      	ldr	r5, [pc, #52]	; (80006ec <__libc_init_array+0x38>)
 80006b8:	4c0d      	ldr	r4, [pc, #52]	; (80006f0 <__libc_init_array+0x3c>)
 80006ba:	1b64      	subs	r4, r4, r5
 80006bc:	10a4      	asrs	r4, r4, #2
 80006be:	2600      	movs	r6, #0
 80006c0:	42a6      	cmp	r6, r4
 80006c2:	d109      	bne.n	80006d8 <__libc_init_array+0x24>
 80006c4:	4d0b      	ldr	r5, [pc, #44]	; (80006f4 <__libc_init_array+0x40>)
 80006c6:	4c0c      	ldr	r4, [pc, #48]	; (80006f8 <__libc_init_array+0x44>)
 80006c8:	f000 f818 	bl	80006fc <_init>
 80006cc:	1b64      	subs	r4, r4, r5
 80006ce:	10a4      	asrs	r4, r4, #2
 80006d0:	2600      	movs	r6, #0
 80006d2:	42a6      	cmp	r6, r4
 80006d4:	d105      	bne.n	80006e2 <__libc_init_array+0x2e>
 80006d6:	bd70      	pop	{r4, r5, r6, pc}
 80006d8:	f855 3b04 	ldr.w	r3, [r5], #4
 80006dc:	4798      	blx	r3
 80006de:	3601      	adds	r6, #1
 80006e0:	e7ee      	b.n	80006c0 <__libc_init_array+0xc>
 80006e2:	f855 3b04 	ldr.w	r3, [r5], #4
 80006e6:	4798      	blx	r3
 80006e8:	3601      	adds	r6, #1
 80006ea:	e7f2      	b.n	80006d2 <__libc_init_array+0x1e>
 80006ec:	08000714 	.word	0x08000714
 80006f0:	08000714 	.word	0x08000714
 80006f4:	08000714 	.word	0x08000714
 80006f8:	08000718 	.word	0x08000718

080006fc <_init>:
 80006fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006fe:	bf00      	nop
 8000700:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000702:	bc08      	pop	{r3}
 8000704:	469e      	mov	lr, r3
 8000706:	4770      	bx	lr

08000708 <_fini>:
 8000708:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800070a:	bf00      	nop
 800070c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800070e:	bc08      	pop	{r3}
 8000710:	469e      	mov	lr, r3
 8000712:	4770      	bx	lr
