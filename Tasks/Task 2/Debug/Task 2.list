
Task 2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002bc  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000450  08000458  00010458  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000450  08000450  00010458  2**0
                  CONTENTS
  4 .ARM          00000000  08000450  08000450  00010458  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000450  08000458  00010458  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000450  08000450  00010450  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000454  08000454  00010454  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010458  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000458  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000458  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010458  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000098b  00000000  00000000  00010488  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000023b  00000000  00000000  00010e13  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  00011050  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000048  00000000  00000000  000110c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dd5f  00000000  00000000  00011108  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000a9b  00000000  00000000  0001ee67  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fb10  00000000  00000000  0001f902  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0006f412  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000b0  00000000  00000000  0006f468  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000438 	.word	0x08000438

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000438 	.word	0x08000438

080001d4 <main>:
//  }
//  return 0;
//}
#include "stm32f401cc_interface.h"

int main(void) {
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	RCC_AHB1ENR |=(1<<1); //  enable port B clock
 80001da:	4b65      	ldr	r3, [pc, #404]	; (8000370 <main+0x19c>)
 80001dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001de:	4a64      	ldr	r2, [pc, #400]	; (8000370 <main+0x19c>)
 80001e0:	f043 0302 	orr.w	r3, r3, #2
 80001e4:	6313      	str	r3, [r2, #48]	; 0x30


	GPIOB_MODER |=(0x01)<< (2*5); // set portB pin 5 as general output
 80001e6:	4b63      	ldr	r3, [pc, #396]	; (8000374 <main+0x1a0>)
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	4a62      	ldr	r2, [pc, #392]	; (8000374 <main+0x1a0>)
 80001ec:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80001f0:	6013      	str	r3, [r2, #0]
	GPIOB_MODER |=(0x01)<< (2*6); // set portB pin 6 as general output
 80001f2:	4b60      	ldr	r3, [pc, #384]	; (8000374 <main+0x1a0>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	4a5f      	ldr	r2, [pc, #380]	; (8000374 <main+0x1a0>)
 80001f8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80001fc:	6013      	str	r3, [r2, #0]
	GPIOB_MODER |=(0x01)<< (2*7); // set portB pin 7 as general output
 80001fe:	4b5d      	ldr	r3, [pc, #372]	; (8000374 <main+0x1a0>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	4a5c      	ldr	r2, [pc, #368]	; (8000374 <main+0x1a0>)
 8000204:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000208:	6013      	str	r3, [r2, #0]

	GPIOB_OTYPER &= (~(1<<5)); // set  portB pin 5 as push-pull
 800020a:	4b5a      	ldr	r3, [pc, #360]	; (8000374 <main+0x1a0>)
 800020c:	685b      	ldr	r3, [r3, #4]
 800020e:	4a59      	ldr	r2, [pc, #356]	; (8000374 <main+0x1a0>)
 8000210:	f023 0320 	bic.w	r3, r3, #32
 8000214:	6053      	str	r3, [r2, #4]
	GPIOB_OTYPER &= (~(1<<6)); // set  portB pin 6 as push-pull
 8000216:	4b57      	ldr	r3, [pc, #348]	; (8000374 <main+0x1a0>)
 8000218:	685b      	ldr	r3, [r3, #4]
 800021a:	4a56      	ldr	r2, [pc, #344]	; (8000374 <main+0x1a0>)
 800021c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000220:	6053      	str	r3, [r2, #4]
	GPIOB_OTYPER &= (~(1<<7)); // set  portB pin 7 as push-pull
 8000222:	4b54      	ldr	r3, [pc, #336]	; (8000374 <main+0x1a0>)
 8000224:	685b      	ldr	r3, [r3, #4]
 8000226:	4a53      	ldr	r2, [pc, #332]	; (8000374 <main+0x1a0>)
 8000228:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800022c:	6053      	str	r3, [r2, #4]


	GPIOB_MODER &= (~(1<<(2*3))); // set portB pin 3 as input
 800022e:	4b51      	ldr	r3, [pc, #324]	; (8000374 <main+0x1a0>)
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	4a50      	ldr	r2, [pc, #320]	; (8000374 <main+0x1a0>)
 8000234:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000238:	6013      	str	r3, [r2, #0]
	GPIOB_PUPDR |=(0x01)<<(2*3); // set portB pin 3 as pull-up
 800023a:	4b4e      	ldr	r3, [pc, #312]	; (8000374 <main+0x1a0>)
 800023c:	68db      	ldr	r3, [r3, #12]
 800023e:	4a4d      	ldr	r2, [pc, #308]	; (8000374 <main+0x1a0>)
 8000240:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000244:	60d3      	str	r3, [r2, #12]

    int count= 1;
 8000246:	2301      	movs	r3, #1
 8000248:	607b      	str	r3, [r7, #4]
    int i=0;
 800024a:	2300      	movs	r3, #0
 800024c:	603b      	str	r3, [r7, #0]

  while (1) {
 // detect the falling edge
      if ((GPIOB_IDR & (1<<3)) ==8){ // read initial button state
 800024e:	4b49      	ldr	r3, [pc, #292]	; (8000374 <main+0x1a0>)
 8000250:	691b      	ldr	r3, [r3, #16]
 8000252:	f003 0308 	and.w	r3, r3, #8
 8000256:	2b08      	cmp	r3, #8
 8000258:	f040 8087 	bne.w	800036a <main+0x196>
    	  for (i=0 ; i< 2500; i++){} //delay
 800025c:	2300      	movs	r3, #0
 800025e:	603b      	str	r3, [r7, #0]
 8000260:	e002      	b.n	8000268 <main+0x94>
 8000262:	683b      	ldr	r3, [r7, #0]
 8000264:	3301      	adds	r3, #1
 8000266:	603b      	str	r3, [r7, #0]
 8000268:	683b      	ldr	r3, [r7, #0]
 800026a:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800026e:	4293      	cmp	r3, r2
 8000270:	ddf7      	ble.n	8000262 <main+0x8e>
    	  if((GPIOB_IDR & (1<<3)) ==0){ // read second button state
 8000272:	4b40      	ldr	r3, [pc, #256]	; (8000374 <main+0x1a0>)
 8000274:	691b      	ldr	r3, [r3, #16]
 8000276:	f003 0308 	and.w	r3, r3, #8
 800027a:	2b00      	cmp	r3, #0
 800027c:	d175      	bne.n	800036a <main+0x196>
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	3b01      	subs	r3, #1
 8000282:	2b06      	cmp	r3, #6
 8000284:	d86a      	bhi.n	800035c <main+0x188>
 8000286:	a201      	add	r2, pc, #4	; (adr r2, 800028c <main+0xb8>)
 8000288:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800028c:	080002a9 	.word	0x080002a9
 8000290:	080002c3 	.word	0x080002c3
 8000294:	080002dd 	.word	0x080002dd
 8000298:	080002f7 	.word	0x080002f7
 800029c:	08000311 	.word	0x08000311
 80002a0:	0800032b 	.word	0x0800032b
 80002a4:	08000345 	.word	0x08000345
//    	  	  count +=1 ;

    	  	 switch(count){
    	  	     case 1:
    	  	    	     GPIOB_ODR = 0;
 80002a8:	4b32      	ldr	r3, [pc, #200]	; (8000374 <main+0x1a0>)
 80002aa:	2200      	movs	r2, #0
 80002ac:	615a      	str	r2, [r3, #20]
    	  	         	 GPIOB_ODR |= (7<<5);
 80002ae:	4b31      	ldr	r3, [pc, #196]	; (8000374 <main+0x1a0>)
 80002b0:	695b      	ldr	r3, [r3, #20]
 80002b2:	4a30      	ldr	r2, [pc, #192]	; (8000374 <main+0x1a0>)
 80002b4:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 80002b8:	6153      	str	r3, [r2, #20]
    	  	         	 count +=1;
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	3301      	adds	r3, #1
 80002be:	607b      	str	r3, [r7, #4]
    	  	             break;
 80002c0:	e054      	b.n	800036c <main+0x198>
    	  	     case 2:
    	  	    	     GPIOB_ODR = 0;
 80002c2:	4b2c      	ldr	r3, [pc, #176]	; (8000374 <main+0x1a0>)
 80002c4:	2200      	movs	r2, #0
 80002c6:	615a      	str	r2, [r3, #20]
    	  	         	 GPIOB_ODR |= (6<<5);
 80002c8:	4b2a      	ldr	r3, [pc, #168]	; (8000374 <main+0x1a0>)
 80002ca:	695b      	ldr	r3, [r3, #20]
 80002cc:	4a29      	ldr	r2, [pc, #164]	; (8000374 <main+0x1a0>)
 80002ce:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80002d2:	6153      	str	r3, [r2, #20]
    	  	         	count +=1;
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	3301      	adds	r3, #1
 80002d8:	607b      	str	r3, [r7, #4]
    	  	             break;
 80002da:	e047      	b.n	800036c <main+0x198>
    	  	     case 3:
    	  	    	     GPIOB_ODR = 0;
 80002dc:	4b25      	ldr	r3, [pc, #148]	; (8000374 <main+0x1a0>)
 80002de:	2200      	movs	r2, #0
 80002e0:	615a      	str	r2, [r3, #20]
    	  	         	 GPIOB_ODR |= (5<<5);
 80002e2:	4b24      	ldr	r3, [pc, #144]	; (8000374 <main+0x1a0>)
 80002e4:	695b      	ldr	r3, [r3, #20]
 80002e6:	4a23      	ldr	r2, [pc, #140]	; (8000374 <main+0x1a0>)
 80002e8:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 80002ec:	6153      	str	r3, [r2, #20]
    	  	         	count +=1;
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	3301      	adds	r3, #1
 80002f2:	607b      	str	r3, [r7, #4]
    	  	             break;
 80002f4:	e03a      	b.n	800036c <main+0x198>
    	  	     case 4:
    	  	    	     GPIOB_ODR = 0;
 80002f6:	4b1f      	ldr	r3, [pc, #124]	; (8000374 <main+0x1a0>)
 80002f8:	2200      	movs	r2, #0
 80002fa:	615a      	str	r2, [r3, #20]
    	  	         	 GPIOB_ODR |= (4<<5);
 80002fc:	4b1d      	ldr	r3, [pc, #116]	; (8000374 <main+0x1a0>)
 80002fe:	695b      	ldr	r3, [r3, #20]
 8000300:	4a1c      	ldr	r2, [pc, #112]	; (8000374 <main+0x1a0>)
 8000302:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000306:	6153      	str	r3, [r2, #20]
    	  	         	count +=1;
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	3301      	adds	r3, #1
 800030c:	607b      	str	r3, [r7, #4]
    	  	             break;
 800030e:	e02d      	b.n	800036c <main+0x198>
    	  	     case 5:
    	  	    	     GPIOB_ODR = 0;
 8000310:	4b18      	ldr	r3, [pc, #96]	; (8000374 <main+0x1a0>)
 8000312:	2200      	movs	r2, #0
 8000314:	615a      	str	r2, [r3, #20]
    	  	             GPIOB_ODR |= (3<<5);
 8000316:	4b17      	ldr	r3, [pc, #92]	; (8000374 <main+0x1a0>)
 8000318:	695b      	ldr	r3, [r3, #20]
 800031a:	4a16      	ldr	r2, [pc, #88]	; (8000374 <main+0x1a0>)
 800031c:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8000320:	6153      	str	r3, [r2, #20]
    	  	             count +=1;
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	3301      	adds	r3, #1
 8000326:	607b      	str	r3, [r7, #4]
    	  	             break;
 8000328:	e020      	b.n	800036c <main+0x198>
    	  	     case 6:
    	  	    	      GPIOB_ODR = 0;
 800032a:	4b12      	ldr	r3, [pc, #72]	; (8000374 <main+0x1a0>)
 800032c:	2200      	movs	r2, #0
 800032e:	615a      	str	r2, [r3, #20]
    	  	              GPIOB_ODR |= (2<<5);
 8000330:	4b10      	ldr	r3, [pc, #64]	; (8000374 <main+0x1a0>)
 8000332:	695b      	ldr	r3, [r3, #20]
 8000334:	4a0f      	ldr	r2, [pc, #60]	; (8000374 <main+0x1a0>)
 8000336:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800033a:	6153      	str	r3, [r2, #20]
    	  	              count +=1;
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	3301      	adds	r3, #1
 8000340:	607b      	str	r3, [r7, #4]
    	  	              break;
 8000342:	e013      	b.n	800036c <main+0x198>
    	  	     case 7:
    	  	    	      GPIOB_ODR = 0;
 8000344:	4b0b      	ldr	r3, [pc, #44]	; (8000374 <main+0x1a0>)
 8000346:	2200      	movs	r2, #0
 8000348:	615a      	str	r2, [r3, #20]
    	  	              GPIOB_ODR |= (1<<5);
 800034a:	4b0a      	ldr	r3, [pc, #40]	; (8000374 <main+0x1a0>)
 800034c:	695b      	ldr	r3, [r3, #20]
 800034e:	4a09      	ldr	r2, [pc, #36]	; (8000374 <main+0x1a0>)
 8000350:	f043 0320 	orr.w	r3, r3, #32
 8000354:	6153      	str	r3, [r2, #20]
    	  	              count =0;
 8000356:	2300      	movs	r3, #0
 8000358:	607b      	str	r3, [r7, #4]
    	  	              break;
 800035a:	e007      	b.n	800036c <main+0x198>
    	  	     default:
    	  	    	      GPIOB_ODR = 0;
 800035c:	4b05      	ldr	r3, [pc, #20]	; (8000374 <main+0x1a0>)
 800035e:	2200      	movs	r2, #0
 8000360:	615a      	str	r2, [r3, #20]
    	  	    	      count +=1;
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	3301      	adds	r3, #1
 8000366:	607b      	str	r3, [r7, #4]
    	  	              break;
 8000368:	e000      	b.n	800036c <main+0x198>
    	  	     }

    	  }
 800036a:	bf00      	nop
      if ((GPIOB_IDR & (1<<3)) ==8){ // read initial button state
 800036c:	e76f      	b.n	800024e <main+0x7a>
 800036e:	bf00      	nop
 8000370:	40023800 	.word	0x40023800
 8000374:	40020400 	.word	0x40020400

08000378 <SystemInit>:
 8000378:	b480      	push	{r7}
 800037a:	af00      	add	r7, sp, #0
 800037c:	4b06      	ldr	r3, [pc, #24]	; (8000398 <SystemInit+0x20>)
 800037e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000382:	4a05      	ldr	r2, [pc, #20]	; (8000398 <SystemInit+0x20>)
 8000384:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000388:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800038c:	bf00      	nop
 800038e:	46bd      	mov	sp, r7
 8000390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000394:	4770      	bx	lr
 8000396:	bf00      	nop
 8000398:	e000ed00 	.word	0xe000ed00

0800039c <Reset_Handler>:
 800039c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80003d4 <LoopFillZerobss+0x12>
 80003a0:	480d      	ldr	r0, [pc, #52]	; (80003d8 <LoopFillZerobss+0x16>)
 80003a2:	490e      	ldr	r1, [pc, #56]	; (80003dc <LoopFillZerobss+0x1a>)
 80003a4:	4a0e      	ldr	r2, [pc, #56]	; (80003e0 <LoopFillZerobss+0x1e>)
 80003a6:	2300      	movs	r3, #0
 80003a8:	e002      	b.n	80003b0 <LoopCopyDataInit>

080003aa <CopyDataInit>:
 80003aa:	58d4      	ldr	r4, [r2, r3]
 80003ac:	50c4      	str	r4, [r0, r3]
 80003ae:	3304      	adds	r3, #4

080003b0 <LoopCopyDataInit>:
 80003b0:	18c4      	adds	r4, r0, r3
 80003b2:	428c      	cmp	r4, r1
 80003b4:	d3f9      	bcc.n	80003aa <CopyDataInit>
 80003b6:	4a0b      	ldr	r2, [pc, #44]	; (80003e4 <LoopFillZerobss+0x22>)
 80003b8:	4c0b      	ldr	r4, [pc, #44]	; (80003e8 <LoopFillZerobss+0x26>)
 80003ba:	2300      	movs	r3, #0
 80003bc:	e001      	b.n	80003c2 <LoopFillZerobss>

080003be <FillZerobss>:
 80003be:	6013      	str	r3, [r2, #0]
 80003c0:	3204      	adds	r2, #4

080003c2 <LoopFillZerobss>:
 80003c2:	42a2      	cmp	r2, r4
 80003c4:	d3fb      	bcc.n	80003be <FillZerobss>
 80003c6:	f7ff ffd7 	bl	8000378 <SystemInit>
 80003ca:	f000 f811 	bl	80003f0 <__libc_init_array>
 80003ce:	f7ff ff01 	bl	80001d4 <main>
 80003d2:	4770      	bx	lr
 80003d4:	20010000 	.word	0x20010000
 80003d8:	20000000 	.word	0x20000000
 80003dc:	20000000 	.word	0x20000000
 80003e0:	08000458 	.word	0x08000458
 80003e4:	20000000 	.word	0x20000000
 80003e8:	2000001c 	.word	0x2000001c

080003ec <ADC_IRQHandler>:
 80003ec:	e7fe      	b.n	80003ec <ADC_IRQHandler>
	...

080003f0 <__libc_init_array>:
 80003f0:	b570      	push	{r4, r5, r6, lr}
 80003f2:	4d0d      	ldr	r5, [pc, #52]	; (8000428 <__libc_init_array+0x38>)
 80003f4:	4c0d      	ldr	r4, [pc, #52]	; (800042c <__libc_init_array+0x3c>)
 80003f6:	1b64      	subs	r4, r4, r5
 80003f8:	10a4      	asrs	r4, r4, #2
 80003fa:	2600      	movs	r6, #0
 80003fc:	42a6      	cmp	r6, r4
 80003fe:	d109      	bne.n	8000414 <__libc_init_array+0x24>
 8000400:	4d0b      	ldr	r5, [pc, #44]	; (8000430 <__libc_init_array+0x40>)
 8000402:	4c0c      	ldr	r4, [pc, #48]	; (8000434 <__libc_init_array+0x44>)
 8000404:	f000 f818 	bl	8000438 <_init>
 8000408:	1b64      	subs	r4, r4, r5
 800040a:	10a4      	asrs	r4, r4, #2
 800040c:	2600      	movs	r6, #0
 800040e:	42a6      	cmp	r6, r4
 8000410:	d105      	bne.n	800041e <__libc_init_array+0x2e>
 8000412:	bd70      	pop	{r4, r5, r6, pc}
 8000414:	f855 3b04 	ldr.w	r3, [r5], #4
 8000418:	4798      	blx	r3
 800041a:	3601      	adds	r6, #1
 800041c:	e7ee      	b.n	80003fc <__libc_init_array+0xc>
 800041e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000422:	4798      	blx	r3
 8000424:	3601      	adds	r6, #1
 8000426:	e7f2      	b.n	800040e <__libc_init_array+0x1e>
 8000428:	08000450 	.word	0x08000450
 800042c:	08000450 	.word	0x08000450
 8000430:	08000450 	.word	0x08000450
 8000434:	08000454 	.word	0x08000454

08000438 <_init>:
 8000438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800043a:	bf00      	nop
 800043c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800043e:	bc08      	pop	{r3}
 8000440:	469e      	mov	lr, r3
 8000442:	4770      	bx	lr

08000444 <_fini>:
 8000444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000446:	bf00      	nop
 8000448:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800044a:	bc08      	pop	{r3}
 800044c:	469e      	mov	lr, r3
 800044e:	4770      	bx	lr
